{"version":3,"file":"static/js/16.07eb6a9f.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Meat&Substitutes/meats.js","components/Meat&Substitutes/Meat.jsx","components/variables.js","../node_modules/fraction-parser/lib/helpers/getClosestLookupNumber.js","../node_modules/fraction-parser/lib/helpers/numberLookupMap.js","../node_modules/fraction-parser/lib/index.js","../node_modules/fraction-parser/lib/toDecimal.js","../node_modules/fraction-parser/lib/toFraction.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const meats = [\r\n        {\r\n                details: {\r\n                        productName: 'איברים פנימיים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(טחול, כבד, לבבות, קורקבנים)',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר בקר',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר הודו ללא עור',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 1,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: ' יש להוריד מנת שומן *',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 90,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: true,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר הודו עם עור',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף ללא עור (עם עצם)',\r\n                        value: 0.25,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 1,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: ' יש להוריד מנת שומן *',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 150,\r\n                        portionFatCalculationCount: 0.25,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם, שקול עם עצם)',\r\n                        measureString: '(עוף קטן מספר 1)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: true,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף עם עור (עם עצם)',\r\n                        value: 0.25,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם, שקול עם עצם)',\r\n                        measureString: '(עוף קטן מספר 1)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דג מעושן/משומר בשמן/מלוח',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים משומרים במים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים רזים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: `.(מכיל עד 5 גר' שומן ב-100 גרם (מבושל *`,\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים רזים (עם עצמות)',\r\n                        value: 0,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: `.(מכיל עד 5 גר' שומן ב-100 גרם (מבושל *`,\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים שמנים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים שמנים (עם עצמות)',\r\n                        value: 0,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'כבש',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקניק',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקנקיות',\r\n                        value: 3,\r\n                        gram: 120,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פסטרמה',\r\n                        value: 6,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0.6,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פרוסה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'שניצל (עוף/הודו)',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0.5,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: ' יש להוסיף מנת לחם *',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 200,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: true,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n];\r\nexport default meats;  ","// import react state\r\nimport { useState, useEffect } from 'react';\r\n// import service \r\nimport meats from '../../services/Meat&Substitutes/meats';\r\n// import variables \r\nimport { variables, userAgent } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\nconst Meat = () => {\r\n        // Use userAgent to manipulate in order to use different elements in different browsers\r\n        const isFirefox = userAgent.isFirefox;\r\n        const isSafari = userAgent.isSafari;\r\n\r\n        //  array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(meats);\r\n        const [productName, setProductName] = useState(meats[4]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n\r\n        useEffect(() => {\r\n                // Add event listener on mount\r\n                window.addEventListener('resize', handleResize);\r\n\r\n                // Clean up the event listener on unmount\r\n                return () => {\r\n                        window.removeEventListener('resize', handleResize);\r\n                };\r\n        }, []);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate countPortionFat \r\n                const countPortionFat = (amount / product?.breadFat?.portionFatCalculationCount).toLocaleString(variables?.numberFormat);\r\n                // Calculate countFat \r\n                const countFat = (amount / product?.breadFat?.fatCalculationCount).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramPortionFat \r\n                const gramPortionFat = (amount / product?.breadFat?.portionFatCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramFat \r\n                const gramFat = (amount / product?.details?.fat).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramBread \r\n                const gramBread = (amount / product?.breadFat?.breadCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate message \r\n                const message = product?.details?.message;\r\n                // Calculate fatString0 \r\n                const fatString0 = `${product?.breadFat?.fatString.split(\" יש להוריד \")[0]} יש להוריד`;\r\n                // Calculate fatString1 \r\n                const fatString1 = product?.breadFat?.fatString.split(\" יש להוריד \")[1];\r\n                // Calculate portionFatString0 \r\n                const portionFatString0 = `${product?.breadFat?.portionFatString.split(\" יש להוריד \")[0]} יש להוריד`;\r\n                // Calculate portionFatString1 \r\n                const portionFatString1 = product?.breadFat?.portionFatString.split(\" יש להוריד \")[1];\r\n                // Calculate breadString0 \r\n                const breadString0 = `${product?.breadFat?.breadString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate breadString1 \r\n                const breadString1 = product?.breadFat?.breadString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count portionFat reasult using toFraction   \r\n                const calculationCountPortionFat = ` ${variables?.fractionCalculation(count)}\\n ${portionFatString0} ${variables?.fractionCalculation(countPortionFat)} ${portionFatString1}`;\r\n                // Calculate count fat reasult using toFraction  \r\n                const calculationCountFat = ` ${variables?.fractionCalculation(count)}\\n ${fatString0} ${variables?.fractionCalculation(countFat)} ${fatString1}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction\r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram portionFat reasult using toFraction  \r\n                const calculationGramPortionFat = ` ${variables?.fractionCalculation(gram)}\\n ${portionFatString0} ${variables?.fractionCalculation(gramPortionFat)} ${portionFatString1}`;\r\n                // Calculate gram fat reasult using toFraction \r\n                const calculationGramFat = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gramFat)} ${fatString1}`;\r\n                // Calculate gram bread reasult using toFraction\r\n                const calculationGramBread = ` ${variables?.fractionCalculation(gram)}\\n ${breadString0} ${variables?.fractionCalculation(gramBread)} ${breadString1}`;\r\n                // Calculate gram fat message reasult using toFraction \r\n                const calculationGramFatMessage = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gramFat)} ${fatString1}\\n ${message}`;\r\n\r\n                if (product && type) {\r\n                        if (product?.check?.count && product?.check?.gram && product?.check?.portionFat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountPortionFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramPortionFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.portionFat) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramPortionFat\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat && product?.check?.message) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFatMessage\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.bread) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramBread\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert(variables.stringAlert);\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        const handleResize = () => {\r\n                setViewportWidth(window.innerWidth);\r\n        };\r\n\r\n        // Clean input field when click it \r\n        const handleClear = (event) => {\r\n                event.target.value = \"\";\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType));\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult(variables.stringResult);\r\n                }\r\n        };\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <div>\r\n                                                <h1>בשר</h1>\r\n                                                <h3>*כ-100 גרם בשר מבושל הם שווה ערך ל-130 גרם בשר טרי. הערכים הינם לאחר בישול.</h3>\r\n                                        </div>\r\n                                        <br />\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                {viewportWidth <= 600 || isSafari ? (\r\n                                                        <select\r\n                                                                name='productType'\r\n                                                                value={productType}\r\n                                                                onChange={handleProductType}\r\n                                                        >\r\n                                                                {\r\n                                                                        types.map((type) => (\r\n                                                                                <option key={type} name=\"productType\" value={type}>\r\n                                                                                        {type}\r\n                                                                                </option>\r\n                                                                        ))\r\n                                                                }\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <>\r\n                                                                <input list=\"productType\"\r\n                                                                        defaultValue={productType}\r\n                                                                        onChange={handleProductType}\r\n                                                                        onClick={handleClear}\r\n                                                                        onFocus={handleClear}\r\n                                                                />\r\n                                                                <datalist id=\"productType\">\r\n                                                                        {\r\n                                                                                types.map((type) => (\r\n                                                                                        <option key={type} name=\"productType\" value={type}>\r\n                                                                                                {type}\r\n                                                                                        </option>\r\n                                                                                ))\r\n                                                                        }\r\n                                                                </datalist>\r\n                                                        </>\r\n                                                )}\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <label>\r\n                                                סוג הבשר:\r\n                                                {viewportWidth <= 600 || isSafari ? (\r\n                                                        <select\r\n                                                                value={productName}\r\n                                                                onChange={handleProduct}\r\n                                                        >\r\n                                                                {products.map((product) => {\r\n                                                                        const shouldShowOption = (product?.check?.count && productType === types[0])\r\n                                                                                || productType === types[1];\r\n                                                                        return shouldShowOption ? (\r\n                                                                                <option\r\n                                                                                        key={product?.details?.productName}\r\n                                                                                        value={product?.details?.productName}\r\n                                                                                >\r\n                                                                                        {\r\n                                                                                                productType === types[0]\r\n                                                                                                        ? `${product?.details?.productName} ${product?.unit?.measureString}`\r\n                                                                                                        : `${product?.details?.productName} ${product?.unit?.gramString}`\r\n                                                                                        }\r\n                                                                                </option>\r\n                                                                        ) : null;\r\n                                                                })}\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <>\r\n                                                                <input list=\"productName\"\r\n                                                                        defaultValue={productName}\r\n                                                                        onChange={handleProduct}\r\n                                                                        onClick={handleClear}\r\n                                                                        onFocus={handleClear}\r\n                                                                />\r\n                                                                <datalist id=\"productName\">\r\n                                                                        {\r\n                                                                                !isFirefox && products.map((product) => (\r\n                                                                                        <option\r\n                                                                                                key={product?.details?.productName}\r\n                                                                                                name=\"productName\"\r\n                                                                                                value={product?.check?.count && productType === types[0] ? product?.details?.productName\r\n                                                                                                        : productType === types[1] ? product?.details?.productName\r\n                                                                                                                : ''}>\r\n                                                                                                {productType === types[0] ? product?.unit?.measureString : product?.unit?.gramString}\r\n                                                                                        </option>\r\n                                                                                ))\r\n                                                                        }\r\n                                                                        {\r\n                                                                                isFirefox && products.map((product) => {\r\n                                                                                        const shouldShowOption = (product?.check?.count && productType === types[0])\r\n                                                                                                || productType === types[1];\r\n                                                                                        return shouldShowOption ? (\r\n                                                                                                <option\r\n                                                                                                        key={product?.details?.productName}\r\n                                                                                                        value={product?.details?.productName}\r\n                                                                                                >\r\n                                                                                                        {\r\n                                                                                                                productType === types[0]\r\n                                                                                                                        ? `${product?.details?.productName} ${product?.unit?.measureString}`\r\n                                                                                                                        : `${product?.details?.productName} ${product?.unit?.gramString}`\r\n                                                                                                        }\r\n                                                                                                </option>\r\n                                                                                        ) : null;\r\n                                                                                })\r\n                                                                        }\r\n                                                                </datalist>\r\n                                                        </>\r\n                                                )}\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <div className='div1'>\r\n                                                מספר מנות:\r\n                                                <p className='result'>{result}</p>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default Meat;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n\r\nexport const userAgent = {\r\n  isFirefox: navigator.userAgent.toLowerCase().includes('firefox'),\r\n  isSafari: /^((?!chrome|android).)*safari/i.test(navigator.userAgent),\r\n};\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./numberLookupMap\"));\n// get the closest vulgar fraction from a decimal\nvar getClosestLookupNumber = function (value) {\n    var closest = 0;\n    var difference = 1;\n    Object.keys(numberLookupMap_1.default).forEach(function (key) {\n        var decimal = parseFloat(key);\n        var newDifference = Math.abs(value - decimal);\n        if (newDifference < difference) {\n            difference = newDifference;\n            closest = decimal;\n        }\n    });\n    return closest;\n};\nexports.default = getClosestLookupNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap = {\n    0.1: {\n        vulgar: '⅒',\n        fraction: '1/10',\n    },\n    0.11: {\n        vulgar: '⅑',\n        fraction: '1/9',\n    },\n    0.12: {\n        vulgar: '⅛',\n        fraction: '1/8',\n    },\n    0.14: {\n        vulgar: '⅐',\n        fraction: '1/7',\n    },\n    0.16: {\n        vulgar: '⅙',\n        fraction: '1/6',\n    },\n    0.2: {\n        vulgar: '⅕',\n        fraction: '1/5',\n    },\n    0.25: {\n        vulgar: '¼',\n        fraction: '1/4',\n    },\n    0.33: {\n        vulgar: '⅓',\n        fraction: '1/3',\n    },\n    0.37: {\n        vulgar: '⅜',\n        fraction: '3/8',\n    },\n    0.4: {\n        vulgar: '⅖',\n        fraction: '2/5',\n    },\n    0.5: {\n        vulgar: '½',\n        fraction: '1/2',\n    },\n    0.6: {\n        vulgar: '⅗',\n        fraction: '3/5',\n    },\n    0.62: {\n        vulgar: '⅝',\n        fraction: '5/8',\n    },\n    0.66: {\n        vulgar: '⅔',\n        fraction: '2/3',\n    },\n    0.75: {\n        vulgar: '¾',\n        fraction: '3/4',\n    },\n    0.8: {\n        vulgar: '⅘',\n        fraction: '4/5',\n    },\n    0.83: {\n        vulgar: '⅚',\n        fraction: '5/6',\n    },\n    0.87: {\n        vulgar: '⅞',\n        fraction: '7/8',\n    },\n};\nexports.default = numberLookupMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDecimal = exports.toFraction = void 0;\nvar toFraction_1 = require(\"./toFraction\");\nObject.defineProperty(exports, \"toFraction\", { enumerable: true, get: function () { return __importDefault(toFraction_1).default; } });\nvar toDecimal_1 = require(\"./toDecimal\");\nObject.defineProperty(exports, \"toDecimal\", { enumerable: true, get: function () { return __importDefault(toDecimal_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\n// function that takes a unicode vulgar or a fraction and returns a decimal\nvar toDecimal = function (value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (value === '' || value === undefined || value === null) {\n        return 0;\n    }\n    var _a = value.split(' '), int = _a[0], fraction = _a[1];\n    if (fraction === undefined || fraction === '') {\n        return parseFloat(int);\n    }\n    var decimal = Object.keys(numberLookupMap_1.default).find(function (key) { return numberLookupMap_1.default[key].vulgar === fraction || numberLookupMap_1.default[key].fraction === fraction; }) || fraction;\n    return parseFloat(int) + parseFloat(decimal);\n};\nexports.default = toDecimal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\nvar getClosestLookupNumber_1 = __importDefault(require(\"./helpers/getClosestLookupNumber\"));\n// functions that returns a string representation of a fraction from a number\nvar toFraction = function (decimal, _a) {\n    var _b = _a.useUnicodeVulgar, useUnicodeVulgar = _b === void 0 ? true : _b;\n    // if the number is a whole number, return it as a string\n    if (decimal % 1 === 0) {\n        return decimal.toString();\n    }\n    var decimalPortion = (decimal - Math.floor(decimal)).toFixed(2);\n    var numberPortion = Math.trunc(decimal);\n    numberPortion = numberPortion === 0 ? '' : \"\".concat(numberPortion, \" \");\n    // if the number is a decimal, return it as a fraction\n    if (useUnicodeVulgar) {\n        return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].vulgar);\n    }\n    return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].fraction);\n};\nexports.default = toFraction;\n"],"names":["props","_jsx","_Fragment","children","className","details","productName","value","gram","bread","fat","portionFat","message","breadFat","breadString","fatString","portionFatString","fatCalculationCount","portionFatCalculationGram","portionFatCalculationCount","breadCalculationGram","unit","gramString","measureString","check","count","Meat","isFirefox","userAgent","isSafari","types","products","useState","meats","setProductName","productType","setProductType","viewportWidth","setViewportWidth","window","innerWidth","productAmount","setProductAmount","result","setResult","product","find","_product$details","type","useEffect","addEventListener","handleResize","removeEventListener","handleProduct","event","target","handleProductType","handleClear","FormFrame","_jsxs","onSubmit","e","preventDefault","calculateValue","amount","_product$details2","_product$breadFat","_product$breadFat2","_product$details3","_product$breadFat3","_product$details4","_product$breadFat4","_product$details5","_product$breadFat5","_product$breadFat6","_product$breadFat7","_product$breadFat8","_product$breadFat9","_product$breadFat10","toLocaleString","variables","numberFormat","countPortionFat","countFat","gramPortionFat","gramFat","gramBread","fatString0","concat","split","fatString1","portionFatString0","portionFatString1","breadString0","breadString1","calculationCountFraction","calculationCount","fractionCalculation","calculationCountPortionFat","calculationCountFat","calculationGramFraction","calculationGram","calculationGramPortionFat","calculationGramFat","calculationGramBread","calculationGramFatMessage","_product$check","_product$check2","_product$check3","_product$check4","_product$check5","_product$check6","_product$check7","_product$check8","_product$check9","_product$check10","_product$check11","_product$check12","_product$check13","_product$check14","_product$check15","_product$check16","_product$check17","NEGLIGIBLE_NUMBER","alert","stringAlert","err","console","log","stringResult","name","onChange","map","list","defaultValue","onClick","onFocus","id","htmlFor","min","max","step","_product$check18","_product$details6","_product$details7","_product$details8","_product$unit","_product$details9","_product$unit2","_product$details10","_product$check19","_product$details11","_product$details12","_product$unit3","_product$unit4","_product$check20","_product$details13","_product$details14","_product$details15","_product$unit5","_product$details16","_product$unit6","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number","navigator","toLowerCase","includes","test","__importDefault","this","mod","__esModule","Object","defineProperty","exports","numberLookupMap_1","require","closest","difference","keys","default","forEach","key","decimal","parseFloat","newDifference","Math","abs","vulgar","fraction","toDecimal","toFraction_1","enumerable","get","toDecimal_1","undefined","_a","int","getClosestLookupNumber_1","_b","toString","decimalPortion","floor","toFixed","numberPortion","trunc"],"sourceRoot":""}