{"version":3,"file":"static/js/572.e16f2be7.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Grains&Bakery/breads.js","components/Grains&Bakery/Breads.jsx","components/variables.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const breads = [\r\n  {\r\n    details: {\r\n      productName: 'לחם לבן/שחור/חלה/חי',\r\n      value: 1,\r\n      gram: 30,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(פרוסה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'לחם דל קלוריות',\r\n      value: 2,\r\n      measure: '(פרוסה)',\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(פרוסה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'לחמנייה קטנה',\r\n      value: 0.5,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'לחמנייה גדולה',\r\n      value: 0.25,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'מצה רגילה',\r\n      value: 0.5,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'מצה קלה',\r\n      value: 1,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פת מצה',\r\n      value: 2,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פיתה רגילה',\r\n      value: 0.33333,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פיתה גדולה',\r\n      value: 0.25,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פיתה ביס',\r\n      value: 1,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פריכיות אורז/לחמית',\r\n      value: 3,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(יחידה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פתית',\r\n      value: 4,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(יחידה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'בייגלה עגול',\r\n      value: 0.25,\r\n      gram: 0,\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n    },\r\n  },\r\n];\r\nexport default breads;\r\n","// import react state\r\nimport { useState, useEffect } from 'react';\r\n// import from react-select\r\nimport Select from 'react-select';\r\n// import service \r\nimport breads from '../../services/Grains&Bakery/breads';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst Breads = () => {\r\n        // array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(breads);\r\n        const [productName, setProductName] = useState(breads[0]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n        const [flag, setFlag] = useState(false);\r\n\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n\r\n        useEffect(() => {\r\n                // Add event listener on mount\r\n                window.addEventListener('resize', handleResize);\r\n\r\n                // Clean up the event listener on unmount\r\n                return () => {\r\n                        window.removeEventListener('resize', handleResize);\r\n                };\r\n        }, []);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction \r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n\r\n                if (product && type) {\r\n                        if (product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[1] ? ` לא ניתן לבצע חישוב לפי גרמים לערך ${productName} `\r\n                                        : calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert(variables.stringAlert);\r\n                }\r\n        }\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleProductPC = (selectedOption) => {\r\n                setProductName(selectedOption.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        const handleProductTypePC = (selectedOption) => {\r\n                setProductType(selectedOption.value);\r\n        };\r\n\r\n        const handleResize = () => {\r\n                setViewportWidth(window.innerWidth);\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType));\r\n                        setFlag(true);\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult(variables.stringResult);\r\n                }\r\n        };\r\n\r\n        const productsOptions = products.map((product) => {\r\n                const shouldShowOption = (product?.check?.gram && productType === types[1])\r\n                        || productType === types[0];\r\n\r\n                return shouldShowOption ? (\r\n                        {\r\n                                value: product?.details?.productName,\r\n                                label: productType === types[0]\r\n                                        ? `${product?.details?.productName} ${product?.unit?.measureString}`\r\n                                        : `${product?.details?.productName} ${product?.unit?.gramString}`\r\n                        }\r\n                ) : null;\r\n        });\r\n\r\n        const filteredProductsOptions = productsOptions.filter(option => option !== null);\r\n\r\n        const typesOptions = types.map((type) => ({\r\n                value: type,\r\n                label: type\r\n        }));\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <h1>לחמים</h1>\r\n                                        <label id='productType'>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                {viewportWidth <= 600 ? (\r\n                                                        <select\r\n                                                                id='productType'\r\n                                                                name='productType'\r\n                                                                value={productType}\r\n                                                                onChange={handleProductType}\r\n                                                        >\r\n                                                                {\r\n                                                                        types.map((type) => (\r\n                                                                                <option key={type} name=\"productType\" value={type}>\r\n                                                                                        {type}\r\n                                                                                </option>\r\n                                                                        ))\r\n                                                                }\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <Select\r\n                                                                id='productType'\r\n                                                                name='productType'\r\n                                                                options={typesOptions}\r\n                                                                isSearchable\r\n                                                                value={typesOptions.find((option) => option.value === productType)}\r\n                                                                onChange={handleProductTypePC}\r\n                                                        />\r\n                                                )}\r\n                                        </label>\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <label>\r\n                                                סוג הלחם:\r\n                                                {viewportWidth <= 600 ? (\r\n                                                        <select\r\n                                                                value={productName}\r\n                                                                onChange={handleProduct}\r\n                                                        >\r\n                                                                {products.map((product) => {\r\n                                                                        const shouldShowOption = (product?.check?.gram && productType === types[1])\r\n                                                                                || productType === types[0];\r\n                                                                        return shouldShowOption ? (\r\n                                                                                <option\r\n                                                                                        key={product?.details?.productName}\r\n                                                                                        value={product?.details?.productName}\r\n                                                                                >\r\n                                                                                        {\r\n                                                                                                productType === types[0]\r\n                                                                                                        ? `${product?.details?.productName} ${product?.unit?.measureString}`\r\n                                                                                                        : `${product?.details?.productName} ${product?.unit?.gramString}`\r\n                                                                                        }\r\n                                                                                </option>\r\n                                                                        ) : null;\r\n                                                                })}\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <Select\r\n                                                                styles={{\r\n                                                                        menu: (provided, state) => ({\r\n                                                                                ...provided,\r\n                                                                                maxHeight: state?.selectProps?.options?.length <= 5 ? 'none' : '200px',\r\n                                                                                overflowY: 'auto',\r\n                                                                        }),\r\n                                                                }}\r\n                                                                options={filteredProductsOptions}\r\n                                                                isSearchable\r\n                                                                value={filteredProductsOptions.find((option) => option.value === productName)}\r\n                                                                onChange={handleProductPC}\r\n                                                        />\r\n                                                )}\r\n                                        </label>\r\n                                        <div className='div-result div-result-pc'>\r\n                                                {flag === true && 'מספר מנות:'}\r\n                                                <div className='result'>{result}</div>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame>\r\n                </>\r\n        );\r\n}\r\nexport default Breads;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // Use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // Use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n"],"names":["props","className","children","details","productName","value","gram","unit","gramString","measureString","check","count","measure","types","useState","breads","products","setProductName","productType","setProductType","window","innerWidth","viewportWidth","setViewportWidth","productAmount","setProductAmount","result","setResult","flag","setFlag","product","find","type","useEffect","addEventListener","handleResize","removeEventListener","productsOptions","map","label","filteredProductsOptions","filter","option","typesOptions","FormFrame","onSubmit","e","preventDefault","amount","toLocaleString","variables","numberFormat","calculationCountFraction","calculationCount","fractionCalculation","calculationGramFraction","calculationGram","NEGLIGIBLE_NUMBER","alert","stringAlert","calculateValue","err","console","log","message","stringResult","id","name","onChange","event","target","options","isSearchable","selectedOption","htmlFor","min","max","step","styles","menu","provided","state","maxHeight","selectProps","length","overflowY","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number"],"sourceRoot":""}