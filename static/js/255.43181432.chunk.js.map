{"version":3,"file":"static/js/255.43181432.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Meat&Substitutes/soybean.js","components/Meat&Substitutes/Soybean.jsx","components/variables.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const soybean = [\r\n        {\r\n                details: {\r\n                        productName: 'המבורגר',\r\n                        value: 1.5,\r\n                        bread: 0.5,\r\n                },\r\n                bread: {\r\n                        breadString: ' יש להוסיף מנות לחם *',\r\n                        breadCalculation: 3,\r\n                },\r\n                unit: {\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        bread: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקנקיות',\r\n                        value: 4,\r\n                        bread: 0,\r\n                },\r\n                bread: {\r\n                        breadString: '',\r\n                        breadCalculation: 0,\r\n                },\r\n                unit: {\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        bread: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'קבאב',\r\n                        value: 3,\r\n                        bread: 0.5,\r\n                },\r\n                bread: {\r\n                        breadString: ' יש להוסיף מנות לחם *',\r\n                        breadCalculation: 6,\r\n                },\r\n                unit: {\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        bread: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'שניצל',\r\n                        value: 1,\r\n                        bread: 0.5,\r\n                },\r\n                bread: {\r\n                        breadString: ' יש להוסיף מנות לחם *',\r\n                        breadCalculation: 2,\r\n                },\r\n                unit: {\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        bread: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'קציצה',\r\n                        value: 1.5,\r\n                        bread: 0.5,\r\n                },\r\n                bread: {\r\n                        breadString: ' יש להוסיף מנות לחם *',\r\n                        breadCalculation: 3,\r\n                },\r\n                unit: {\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        bread: true,\r\n                },\r\n        },\r\n];\r\nexport default soybean;  ","// import react state\r\nimport { useState, useEffect } from 'react';\r\n// import from react-select\r\nimport Select from 'react-select';\r\n// import service \r\nimport soybean from '../../services/Meat&Substitutes/soybean';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst Soybean = () => {\r\n        // My states \r\n        const [products] = useState(soybean);\r\n        const [productName, setProductName] = useState(soybean[0]['details']['productName']);\r\n        const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n        const [flag, setFlag] = useState(false);\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n\r\n        useEffect(() => {\r\n                // Add event listener on mount\r\n                window.addEventListener('resize', handleResize);\r\n\r\n                // Clean up the event listener on unmount\r\n                return () => {\r\n                        window.removeEventListener('resize', handleResize);\r\n                };\r\n        }, []);\r\n\r\n        // My handlers\r\n        const calculateValue = (amount) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate countBread \r\n                const countBread = (amount / product?.bread?.breadCalculation).toLocaleString(variables?.numberFormat);\r\n                // Calculate breadString0 \r\n                const breadString0 = `${product?.bread?.breadString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate breadString1 \r\n                const breadString1 = product?.bread?.breadString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count bread reasult  \r\n                const calculationCountBread = ` ${variables?.fractionCalculation(count)}\\n ${breadString0} ${variables?.fractionCalculation(countBread)} ${breadString1}`;\r\n\r\n                if (product) {\r\n                        if (product?.check?.bread) {\r\n                                return calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountBread : ' זניח';\r\n                        }\r\n                        else {\r\n                                return calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount : ' זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert(variables.stringAlert);\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleProductPC = (selectedOption) => {\r\n                setProductName(selectedOption.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleResize = () => {\r\n                setViewportWidth(window.innerWidth);\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productAmount));\r\n                        setFlag(true);\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult(variables.stringResult);\r\n                }\r\n        };\r\n\r\n        const productsOptions = products.map((product) => ({\r\n                value: product?.details?.productName,\r\n                label: `${product?.details?.productName} ${product?.unit?.measureString}`\r\n        }));\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <h1>תחליפי בשר - מוצרי סויה מוכנים</h1>\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <label>\r\n                                                סוג המוצר:\r\n                                                {viewportWidth <= 600 ? (\r\n                                                        <select\r\n                                                                value={productName}\r\n                                                                onChange={handleProduct}\r\n                                                        >\r\n                                                                {products.map((product) => (\r\n                                                                        <option key={product?.details?.productName} value={product?.details?.productName}>\r\n                                                                                {`${product?.details?.productName} ${product?.unit?.measureString}`}\r\n                                                                        </option>\r\n                                                                ))}\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <Select\r\n                                                                options={productsOptions}\r\n                                                                isSearchable\r\n                                                                value={productsOptions.find((option) => option.value === productName)}\r\n                                                                onChange={handleProductPC}\r\n                                                        />\r\n                                                )}\r\n                                        </label>\r\n                                        <div className='div-result div-result-pc'>\r\n                                                {flag === true && 'מספר מנות:'}\r\n                                                <div className='result'>{result}</div>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default Soybean;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // Use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // Use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n"],"names":["props","className","children","details","productName","value","bread","breadString","breadCalculation","unit","measureString","check","useState","soybean","products","setProductName","window","innerWidth","viewportWidth","setViewportWidth","productAmount","setProductAmount","result","setResult","flag","setFlag","product","find","useEffect","addEventListener","handleResize","removeEventListener","productsOptions","map","label","FormFrame","onSubmit","e","preventDefault","amount","count","toLocaleString","variables","numberFormat","countBread","breadString0","split","breadString1","calculationCountFraction","calculationCount","fractionCalculation","calculationCountBread","NEGLIGIBLE_NUMBER","alert","stringAlert","calculateValue","err","console","log","message","stringResult","htmlFor","name","type","id","min","max","step","onChange","event","target","options","isSearchable","option","selectedOption","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number"],"sourceRoot":""}