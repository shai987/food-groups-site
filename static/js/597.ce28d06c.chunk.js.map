{"version":3,"file":"static/js/597.ce28d06c.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/LowFatMilk/lowFatMilk.js","components/LowFatMilk/LowFatMilk.jsx","components/variables.js","../node_modules/fraction-parser/lib/helpers/getClosestLookupNumber.js","../node_modules/fraction-parser/lib/helpers/numberLookupMap.js","../node_modules/fraction-parser/lib/index.js","../node_modules/fraction-parser/lib/toDecimal.js","../node_modules/fraction-parser/lib/toFraction.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const lowFatMilk = [\r\n  {\r\n    details: {\r\n      productName: `גבינה לבנה/קוטג' (0.5%)`,\r\n      value1: 6,\r\n      value2: 0,\r\n      gram: 120,\r\n      message: ' .דל בפחמימות ומכיל יותר חלבון (80 קלוריות) *',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(כף)',\r\n      measures: ['כף', ''],\r\n    },\r\n    check: {\r\n      message: true,\r\n      value: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'גבינה צהובה לייט',\r\n      value1: 2,\r\n      value2: 0,\r\n      gram: 40,\r\n      message: '.דל בפחמימות ומכיל יותר חלבון (80 קלוריות) *',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(פרוסה)',\r\n      measures: ['פרוסה', ''],\r\n    },\r\n    check: {\r\n      message: true,\r\n      value: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'חלב דל שומן (0-1%)',\r\n      value1: 1,\r\n      value2: 0,\r\n      gram: 200,\r\n      message: '',\r\n    },\r\n    unit: {\r\n      gramString: '(מ\"ל)',\r\n      measureString: '(כוס)',\r\n      measures: ['כוס', ''],\r\n    },\r\n    check: {\r\n      message: false,\r\n      value: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'יוגורט בטעם פירות מסוג דיאט',\r\n      value1: 1,\r\n      value2: 1,\r\n      gram: 170,\r\n      message: '',\r\n    },\r\n    unit: {\r\n      gramString: '(מ\"ל)',\r\n      measureString: '(גביע/כוס)',\r\n      measures: ['גביע', 'כוס'],\r\n    },\r\n    check: {\r\n      message: false,\r\n      value: true,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'יוגורט/קפיר דל שומן (1.5%)',\r\n      value1: 1,\r\n      value2: 1,\r\n      gram: 170,\r\n      message: '',\r\n    },\r\n    unit: {\r\n      gramString: '(מ\"ל)',\r\n      measureString: '(גביע/כוס)',\r\n      measures: ['גביע', 'כוס'],\r\n    },\r\n    check: {\r\n      message: false,\r\n      value: true,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'לבן כחוש (1.5%)',\r\n      value1: 1,\r\n      value2: 1,\r\n      gram: 170,\r\n      message: '',\r\n    },\r\n    unit: {\r\n      gramString: '(מ\"ל)',\r\n      measureString: '(גביע/כוס)',\r\n      measures: ['גביע', 'כוס'],\r\n    },\r\n    check: {\r\n      message: false,\r\n      value: true,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'שוקו דיאט',\r\n      value1: 1.25,\r\n      value2: 0,\r\n      gram: 250,\r\n      message: '',\r\n    },\r\n    unit: {\r\n      gramString: '(מ\"ל)',\r\n      measureString: '(כוס)',\r\n      measures: ['כוס', ''],\r\n    },\r\n    check: {\r\n      message: false,\r\n      value: false,\r\n    },\r\n  },\r\n];\r\nexport default lowFatMilk;\r\n","// import react states\r\nimport { useState, useEffect } from 'react';\r\n// import service \r\nimport lowFatMilk from '../../services/LowFatMilk/lowFatMilk';\r\n// import variables \r\nimport { variables, userAgent } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst LowFatMilk = () => {\r\n        // Use userAgent to manipulate in order to use different elements in different browsers\r\n        const isFirefox = userAgent.isFirefox;\r\n        const isSafari = userAgent.isSafari;\r\n\r\n        // array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states  \r\n        const [products] = useState(lowFatMilk);\r\n        const [productName, setProductName] = useState(lowFatMilk[0]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // array of value calculation\r\n        const values = [product?.unit?.measures[0], product?.unit?.measures[1]];\r\n        const [productValues, setProductValues] = useState(values[0]);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n        // Get array of value\r\n        const value = values.find(value => value === productValues);\r\n\r\n        useEffect(() => {\r\n                if (values[0]) {\r\n                        setProductValues(values[0]);\r\n                }\r\n                else {\r\n                        setProductValues(values[1]);\r\n                }\r\n        }, [product]);\r\n\r\n        useEffect(() => {\r\n                // Add event listener on mount\r\n                window.addEventListener('resize', handleResize);\r\n\r\n                // Clean up the event listener on unmount\r\n                return () => {\r\n                        window.removeEventListener('resize', handleResize);\r\n                };\r\n        }, []);\r\n\r\n        // My handlers\r\n        const calculateValue = (amount, productType, productValues) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value1).toLocaleString(variables?.numberFormat);\r\n                // Calculate countValue2 \r\n                const countValue2 = (amount / product?.details?.value2).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate message \r\n                const message = product?.details?.message;\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count message reasult using toFraction \r\n                const calculationCountMessage = ` ${variables?.fractionCalculation(count)}\\n ${message}`;\r\n                // Use to comparison count value with NEGLIGIBLE_NUMBER\r\n                const calculationCountValueFraction = ` ${countValue2}`;\r\n                // Calculate count value2 reasult using toFraction \r\n                const calculationCountValue2 = ` ${variables?.fractionCalculation(countValue2)}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction \r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram message reasult using toFraction \r\n                const calculationGramMessage = ` ${variables?.fractionCalculation(gram)}\\n ${message}`;\r\n\r\n                if (product && type && value) {\r\n                        if (product?.check?.message) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountMessage\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramMessage\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.value) {\r\n                                if (productType === types[0]) {\r\n                                        return productValues === values[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                                : productValues === values[1] && calculationCountValueFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountValue2\r\n                                                        : ' זניח';\r\n                                }\r\n                                else {\r\n                                        return calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram : ' זניח';\r\n                                }\r\n                        }\r\n                        else {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert(variables.stringAlert);\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        const handleProductValues = (event) => {\r\n                setProductValues(event.target.value);\r\n        };\r\n\r\n        const handleResize = () => {\r\n                setViewportWidth(window.innerWidth);\r\n        };\r\n\r\n        // Clean input field when click it \r\n        const handleClear = (event) => {\r\n                event.target.value = \"\";\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productAmount, productType, productValues));\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult(variables.stringResult);\r\n                }\r\n        };\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <h1>חלב דל שומן</h1>\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                {viewportWidth <= 600 || isSafari ? (\r\n                                                        <select\r\n                                                                name='productType'\r\n                                                                value={productType}\r\n                                                                onChange={handleProductType}\r\n                                                        >\r\n                                                                {\r\n                                                                        types.map((type) => (\r\n                                                                                <option key={type} name=\"productType\" value={type}>\r\n                                                                                        {type}\r\n                                                                                </option>\r\n                                                                        ))\r\n                                                                }\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <>\r\n                                                                <input list=\"productType\"\r\n                                                                        defaultValue={productType}\r\n                                                                        onChange={handleProductType}\r\n                                                                        onClick={handleClear}\r\n                                                                        onFocus={handleClear}\r\n                                                                />\r\n                                                                <datalist id=\"productType\">\r\n                                                                        {\r\n                                                                                types.map((type) => (\r\n                                                                                        <option key={type} name=\"productType\" value={type}>\r\n                                                                                                {type}\r\n                                                                                        </option>\r\n                                                                                ))\r\n                                                                        }\r\n                                                                </datalist>\r\n                                                        </>\r\n                                                )}\r\n                                        </label>\r\n                                        <br />\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נצרכת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <br />\r\n                                        <label>\r\n                                                סוג המוצר:\r\n                                                {viewportWidth <= 600 || isSafari ? (\r\n                                                        <select\r\n                                                                value={productName}\r\n                                                                onChange={handleProduct}\r\n                                                        >\r\n                                                                {products.map((product) => (\r\n                                                                        <option key={product?.details?.productName} value={product?.details?.productName}>\r\n                                                                                {productType === types[0] ? `${product?.details?.productName} ${product?.unit?.measureString}` : `${product?.details?.productName} ${product?.unit?.gramString}`}\r\n                                                                        </option>\r\n                                                                ))}\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <>\r\n                                                                <input\r\n                                                                        list=\"productName\"\r\n                                                                        defaultValue={productName}\r\n                                                                        onChange={handleProduct}\r\n                                                                        onClick={handleClear}\r\n                                                                        onFocus={handleClear}\r\n                                                                />\r\n                                                                <datalist id=\"productName\">\r\n                                                                        {\r\n                                                                                !isFirefox && products.map((product) => (\r\n                                                                                        <option key={product?.details?.productName} name=\"productName\" value={product?.details?.productName}>\r\n                                                                                                {productType === types[0] ? product?.unit?.measureString : product?.unit?.gramString}\r\n                                                                                        </option>\r\n                                                                                ))\r\n                                                                        }\r\n                                                                        {\r\n                                                                                isFirefox && products.map((product) => (\r\n                                                                                        <option key={product?.details?.productName} name=\"productName\" value={product?.details?.productName}>\r\n                                                                                                {productType === types[0] ? `${product?.details?.productName} ${product?.unit?.measureString}` : `${product?.details?.productName} ${product?.unit?.gramString}`}\r\n                                                                                        </option>\r\n                                                                                ))\r\n                                                                        }\r\n                                                                </datalist>\r\n                                                        </>\r\n                                                )}\r\n                                        </label>\r\n                                        <br />\r\n                                        {product?.check?.value === true && productType === types[0] && <div>\r\n                                                <label>\r\n                                                        בחירת סוג חישוב כמות\r\n                                                        {viewportWidth <= 600 || isSafari ? (\r\n                                                                <select\r\n                                                                        value={productValues || ''}\r\n                                                                        onChange={handleProductValues}\r\n                                                                >\r\n                                                                        {\r\n                                                                                values.map((value) => (\r\n                                                                                        <option key={value} name=\"productValues\" value={value || ''}>\r\n                                                                                                {value}\r\n                                                                                        </option>\r\n                                                                                ))\r\n                                                                        }\r\n                                                                </select>\r\n                                                        ) : (\r\n                                                                <>\r\n                                                                        <input list=\"productValues\"\r\n                                                                                value={productValues || ''}\r\n                                                                                onChange={handleProductValues}\r\n                                                                                onClick={handleClear}\r\n                                                                                onFocus={handleClear}\r\n                                                                        />\r\n                                                                        <datalist id=\"productValues\">\r\n                                                                                {\r\n                                                                                        values.map((value) => (\r\n                                                                                                <option key={value} name=\"productValues\" value={value || ''}>\r\n                                                                                                        {value}\r\n                                                                                                </option>\r\n                                                                                        ))\r\n                                                                                }\r\n                                                                        </datalist>\r\n                                                                </>\r\n                                                        )}\r\n\r\n                                                </label>\r\n                                        </div>}\r\n                                        <br />\r\n                                        <div className='div1'>\r\n                                                מספר מנות:\r\n                                                <p className='result'>{result}</p>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame>\r\n                </>\r\n        );\r\n};\r\n\r\nexport default LowFatMilk;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n\r\nexport const userAgent = {\r\n  isFirefox: navigator.userAgent.toLowerCase().includes('firefox'),\r\n  isSafari: /^((?!chrome|android).)*safari/i.test(navigator.userAgent),\r\n};\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./numberLookupMap\"));\n// get the closest vulgar fraction from a decimal\nvar getClosestLookupNumber = function (value) {\n    var closest = 0;\n    var difference = 1;\n    Object.keys(numberLookupMap_1.default).forEach(function (key) {\n        var decimal = parseFloat(key);\n        var newDifference = Math.abs(value - decimal);\n        if (newDifference < difference) {\n            difference = newDifference;\n            closest = decimal;\n        }\n    });\n    return closest;\n};\nexports.default = getClosestLookupNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap = {\n    0.1: {\n        vulgar: '⅒',\n        fraction: '1/10',\n    },\n    0.11: {\n        vulgar: '⅑',\n        fraction: '1/9',\n    },\n    0.12: {\n        vulgar: '⅛',\n        fraction: '1/8',\n    },\n    0.14: {\n        vulgar: '⅐',\n        fraction: '1/7',\n    },\n    0.16: {\n        vulgar: '⅙',\n        fraction: '1/6',\n    },\n    0.2: {\n        vulgar: '⅕',\n        fraction: '1/5',\n    },\n    0.25: {\n        vulgar: '¼',\n        fraction: '1/4',\n    },\n    0.33: {\n        vulgar: '⅓',\n        fraction: '1/3',\n    },\n    0.37: {\n        vulgar: '⅜',\n        fraction: '3/8',\n    },\n    0.4: {\n        vulgar: '⅖',\n        fraction: '2/5',\n    },\n    0.5: {\n        vulgar: '½',\n        fraction: '1/2',\n    },\n    0.6: {\n        vulgar: '⅗',\n        fraction: '3/5',\n    },\n    0.62: {\n        vulgar: '⅝',\n        fraction: '5/8',\n    },\n    0.66: {\n        vulgar: '⅔',\n        fraction: '2/3',\n    },\n    0.75: {\n        vulgar: '¾',\n        fraction: '3/4',\n    },\n    0.8: {\n        vulgar: '⅘',\n        fraction: '4/5',\n    },\n    0.83: {\n        vulgar: '⅚',\n        fraction: '5/6',\n    },\n    0.87: {\n        vulgar: '⅞',\n        fraction: '7/8',\n    },\n};\nexports.default = numberLookupMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDecimal = exports.toFraction = void 0;\nvar toFraction_1 = require(\"./toFraction\");\nObject.defineProperty(exports, \"toFraction\", { enumerable: true, get: function () { return __importDefault(toFraction_1).default; } });\nvar toDecimal_1 = require(\"./toDecimal\");\nObject.defineProperty(exports, \"toDecimal\", { enumerable: true, get: function () { return __importDefault(toDecimal_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\n// function that takes a unicode vulgar or a fraction and returns a decimal\nvar toDecimal = function (value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (value === '' || value === undefined || value === null) {\n        return 0;\n    }\n    var _a = value.split(' '), int = _a[0], fraction = _a[1];\n    if (fraction === undefined || fraction === '') {\n        return parseFloat(int);\n    }\n    var decimal = Object.keys(numberLookupMap_1.default).find(function (key) { return numberLookupMap_1.default[key].vulgar === fraction || numberLookupMap_1.default[key].fraction === fraction; }) || fraction;\n    return parseFloat(int) + parseFloat(decimal);\n};\nexports.default = toDecimal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\nvar getClosestLookupNumber_1 = __importDefault(require(\"./helpers/getClosestLookupNumber\"));\n// functions that returns a string representation of a fraction from a number\nvar toFraction = function (decimal, _a) {\n    var _b = _a.useUnicodeVulgar, useUnicodeVulgar = _b === void 0 ? true : _b;\n    // if the number is a whole number, return it as a string\n    if (decimal % 1 === 0) {\n        return decimal.toString();\n    }\n    var decimalPortion = (decimal - Math.floor(decimal)).toFixed(2);\n    var numberPortion = Math.trunc(decimal);\n    numberPortion = numberPortion === 0 ? '' : \"\".concat(numberPortion, \" \");\n    // if the number is a decimal, return it as a fraction\n    if (useUnicodeVulgar) {\n        return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].vulgar);\n    }\n    return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].fraction);\n};\nexports.default = toFraction;\n"],"names":["props","_jsx","_Fragment","children","className","details","productName","value1","value2","gram","message","unit","gramString","measureString","measures","check","value","LowFatMilk","_product$unit","_product$unit2","_product$check3","isFirefox","userAgent","isSafari","types","products","useState","lowFatMilk","setProductName","productType","setProductType","viewportWidth","setViewportWidth","window","innerWidth","product","find","_product$details","values","productValues","setProductValues","productAmount","setProductAmount","result","setResult","type","useEffect","addEventListener","handleResize","removeEventListener","handleProduct","event","target","handleProductType","handleProductValues","handleClear","FormFrame","_jsxs","onSubmit","e","preventDefault","calculateValue","amount","_product$details2","_product$details3","_product$details4","_product$details5","count","toLocaleString","variables","numberFormat","countValue2","calculationCountFraction","concat","calculationCount","fractionCalculation","calculationCountMessage","calculationCountValueFraction","calculationCountValue2","calculationGramFraction","calculationGram","calculationGramMessage","_product$check","_product$check2","NEGLIGIBLE_NUMBER","alert","stringAlert","err","console","log","stringResult","name","onChange","map","list","defaultValue","onClick","onFocus","id","htmlFor","min","max","step","_product$details6","_product$details7","_product$details8","_product$unit3","_product$details9","_product$unit4","_product$details10","_product$details11","_product$unit5","_product$unit6","_product$details12","_product$details13","_product$details14","_product$unit7","_product$details15","_product$unit8","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number","navigator","toLowerCase","includes","test","__importDefault","this","mod","__esModule","Object","defineProperty","exports","numberLookupMap_1","require","closest","difference","keys","default","forEach","key","decimal","parseFloat","newDifference","Math","abs","vulgar","fraction","toDecimal","toFraction_1","enumerable","get","toDecimal_1","undefined","_a","split","int","getClosestLookupNumber_1","_b","toString","decimalPortion","floor","toFixed","numberPortion","trunc"],"sourceRoot":""}