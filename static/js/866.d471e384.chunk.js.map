{"version":3,"file":"static/js/866.d471e384.chunk.js","mappings":"iJAEA,MAYA,EAZmBA,IAEHC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACQF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBD,UAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAClBH,EAAMG,c,6DCP/C,MA+SA,EA/Sa,CACL,CACQE,QAAS,CACDC,YAAa,gEACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,GACNC,MAAO,EACPC,QAAS,yPAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,uBACZC,cAAe,mCACfC,SAAU,CAAC,iCAAS,KAE5BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,sEACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,GACNC,MAAO,EACPC,QAAS,yPAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,uBACZC,cAAe,mCACfC,SAAU,CAAC,iCAAS,KAE5BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,sEACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,GACNC,MAAO,EACPC,QAAS,yPAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,uBACZC,cAAe,GACfK,eAAgB,IAChBC,eAAgB,GAChBL,SAAU,CAAC,IAAK,KAGxBC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAY,yFACZC,OAAQ,GACRC,OAAQ,EACRC,KAAM,IACNC,MAAO,EACPC,QAAS,yPAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,uBACZC,cAAe,gDACfC,SAAU,CAAC,oDAAa,iBAEhCC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,mDACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,IACNC,MAAO,EACPC,QAAS,IAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,kBACZC,cAAe,uBACfC,SAAU,CAAC,qBAAO,KAE1BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,4CACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,IACNC,MAAO,EACPC,QAAS,IAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,kBACZC,cAAe,gDACfC,SAAU,CAAC,8CAAY,KAE/BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,gEACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,IACNC,MAAO,EACPC,QAAS,IAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,kBACZC,cAAe,gDACfC,SAAU,CAAC,2BAAQ,uBAG3BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,mDACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,IACNC,MAAO,EACPC,QAAS,IAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,kBACZC,cAAe,gDACfC,SAAU,CAAC,2BAAQ,uBAE3BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,2DACbC,OAAQ,EACRC,OAAQ,IACRC,KAAM,IACNC,MAAO,EACPC,QAAS,IAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,EACtBC,YAAa,IAErBC,KAAM,CACEC,WAAY,kBACZC,cAAe,mEACfC,SAAU,CAAC,8CAAY,uBAE/BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,yFACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,IACNC,MAAO,EACPC,QAAS,IAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,IACtBC,YAAa,0GAErBC,KAAM,CACEC,WAAY,kBACZC,cAAe,gDACfC,SAAU,CAAC,8CAAY,KAE/BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,IAGvB,CACQhB,QAAS,CACDC,YAAa,6CACbC,OAAQ,EACRC,OAAQ,EACRC,KAAM,IACNC,MAAO,EACPC,QAAS,IAEjBD,MAAO,CACCE,iBAAkB,EAClBC,qBAAsB,IACtBC,YAAa,0GAErBC,KAAM,CACEC,WAAY,kBACZC,cAAe,6BACfC,SAAU,CAAC,2BAAQ,KAE3BC,MAAO,CACCC,OAAO,EACPX,MAAM,EACNC,OAAO,EACPC,SAAS,EACTU,OAAO,K,2CChS/B,MA4PA,EA5PaG,KAAO,IAADC,EAAAC,EAAAC,EAEX,MAAMC,EAAQ,CAAC,2BAAQ,uBAGhBC,IAAYC,EAAAA,EAAAA,UAASC,IACrBzB,EAAa0B,IAAkBF,EAAAA,EAAAA,UAASC,EAAK,GAAY,QAAe,cACxEE,EAAaC,IAAkBJ,EAAAA,EAAAA,UAASF,EAAM,IAE/CO,EAAUN,EAASO,MAAKD,IAAO,IAAAE,EAAA,OAAW,OAAPF,QAAO,IAAPA,GAAgB,QAATE,EAAPF,EAAS9B,eAAO,IAAAgC,OAAT,EAAPA,EAAkB/B,eAAgBA,CAAW,IAEhFgC,EAAS,CAAQ,OAAPH,QAAO,IAAPA,GAAa,QAANV,EAAPU,EAASpB,YAAI,IAAAU,OAAN,EAAPA,EAAeP,SAAS,GAAW,OAAPiB,QAAO,IAAPA,GAAa,QAANT,EAAPS,EAASpB,YAAI,IAAAW,OAAN,EAAPA,EAAeR,SAAS,KAC7DqB,EAAeC,IAAoBV,EAAAA,EAAAA,UAASQ,EAAO,KACnDG,EAAeC,IAAoBZ,EAAAA,EAAAA,UAAS,IAC5Ca,EAAQC,IAAad,EAAAA,EAAAA,UAAS,IAG/Be,EAAOjB,EAAMQ,MAAKS,GAAQA,IAASZ,IAEnCZ,EAAQiB,EAAOF,MAAKf,GAASA,IAAUkB,KAE7CO,EAAAA,EAAAA,YAAU,KACER,EAAO,GACHE,EAAiBF,EAAO,IAGxBE,EAAiBF,EAAO,GAChC,GACL,CAACH,IAGJ,MA+GMY,EAAeC,IACbA,EAAMC,OAAO5B,MAAQ,EAAE,EAe/B,OACQpB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACQF,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CAAA/C,UACFgD,EAAAA,EAAAA,MAAA,QAAMC,SAfRC,IAEdA,EAAEC,iBACF,IACQV,EAvHOW,EAACjD,EAAakD,EAAQvB,EAAaM,KAAmB,IAADkB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEpE,MAAM5C,GAASoC,GAAgB,OAAPrB,QAAO,IAAPA,GAAgB,QAATsB,EAAPtB,EAAS9B,eAAO,IAAAoD,OAAT,EAAPA,EAAkBlD,SAAQ0D,eAAwB,OAATC,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWC,cAEtEC,GAAeZ,GAAgB,OAAPrB,QAAO,IAAPA,GAAgB,QAATuB,EAAPvB,EAAS9B,eAAO,IAAAqD,OAAT,EAAPA,EAAkBlD,SAAQyD,eAAwB,OAATC,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWC,cAE5E1D,GAAQ+C,GAAgB,OAAPrB,QAAO,IAAPA,GAAgB,QAATwB,EAAPxB,EAAS9B,eAAO,IAAAsD,OAAT,EAAPA,EAAkBlD,OAAMwD,eAAwB,OAATC,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWC,cAEnExD,EAAiB,OAAPwB,QAAO,IAAPA,GAAgB,QAATyB,EAAPzB,EAAS9B,eAAO,IAAAuD,OAAT,EAAPA,EAAkBjD,QAE5BD,GAAS8C,GAAgB,OAAPrB,QAAO,IAAPA,GAAc,QAAP0B,EAAP1B,EAASzB,aAAK,IAAAmD,OAAP,EAAPA,EAAgBjD,mBAAkBqD,eAAwB,OAATC,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWC,cAE9EE,GAAab,GAAgB,OAAPrB,QAAO,IAAPA,GAAc,QAAP2B,EAAP3B,EAASzB,aAAK,IAAAoD,OAAP,EAAPA,EAAgBjD,uBAAsBoD,eAAwB,OAATC,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWC,cAEtFG,EAAY,GAAAC,OAAa,OAAPpC,QAAO,IAAPA,GAAc,QAAP4B,EAAP5B,EAASzB,aAAK,IAAAqD,OAAP,EAAPA,EAAgBjD,YAAY0D,MAAM,uDAAe,GAAE,sDAErEC,EAAsB,OAAPtC,QAAO,IAAPA,GAAc,QAAP6B,EAAP7B,EAASzB,aAAK,IAAAsD,OAAP,EAAPA,EAAgBlD,YAAY0D,MAAM,uDAAe,GAGhEE,EAAwB,IAAAH,OAAOnD,GAE/BuD,EAAgB,IAAAJ,OAAgB,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBxD,IAEtDyD,EAAuB,IAAAN,OAAgB,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBxD,GAAM,OAAAmD,OAAM5D,GAEzEmE,EAA6B,IAAAP,OAAgB,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBR,GAAY,OAAAG,OAAM5D,GAErFoE,EAAqB,IAAAR,OAAgB,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBxD,GAAM,OAAAmD,OAAMD,EAAY,KAAAC,OAAa,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBlE,GAAM,KAAA6D,OAAIE,GAEhIO,EAA6B,IAAAT,OAAOH,GAEpCa,EAAsB,IAAAV,OAAgB,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBR,IAG5Dc,EAAuB,IAAAX,OAAO9D,GAE9B0E,EAAe,IAAAZ,OAAgB,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBnE,IAErD2E,EAAoB,IAAAb,OAAgB,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBnE,GAAK,OAAA8D,OAAMD,EAAY,KAAAC,OAAa,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBP,GAAU,KAAAE,OAAIE,GAElIY,EAAsB,IAAAd,OAAgB,OAATL,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAWU,oBAAoBnE,GAAK,OAAA8D,OAAM5D,GAE9C,IAAD2E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9B,OAAI5D,GAAWU,GAAQxB,EACJ,OAAPc,QAAO,IAAPA,GAAc,QAAPmD,EAAPnD,EAAShB,aAAK,IAAAmE,GAAdA,EAAgB5E,MACLuB,IAAgBL,EAAM,IAAM8C,IAAqC,OAATR,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBjB,EACpF9C,IAAgBL,EAAM,IAAMsD,IAAoC,OAAThB,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBZ,EAC9E,4BAEV,OAAPjD,QAAO,IAAPA,GAAc,QAAPoD,EAAPpD,EAAShB,aAAK,IAAAoE,IAAdA,EAAgBnE,OAAgB,OAAPe,QAAO,IAAPA,GAAc,QAAPqD,EAAPrD,EAAShB,aAAK,IAAAqE,IAAdA,EAAgB7E,SAAmB,OAAPwB,QAAO,IAAPA,GAAc,QAAPsD,EAAPtD,EAAShB,aAAK,IAAAsE,GAAdA,EAAgBpE,MAK7D,OAAPc,QAAO,IAAPA,GAAc,QAAPuD,EAAPvD,EAAShB,aAAK,IAAAuE,GAAdA,EAAgBtE,OAAgB,OAAPe,QAAO,IAAPA,GAAc,QAAPwD,EAAPxD,EAAShB,aAAK,IAAAwE,IAAdA,EAAgBhF,QAKnC,OAAPwB,QAAO,IAAPA,GAAc,QAAPyD,EAAPzD,EAAShB,aAAK,IAAAyE,GAAdA,EAAgBvE,OAAgB,OAAPc,QAAO,IAAPA,GAAc,QAAP0D,EAAP1D,EAAShB,aAAK,IAAA0E,GAAdA,EAAgBlF,QACtCsB,IAAgBL,EAAM,GACXW,IAAkBD,EAAO,IAAMoC,IAAqC,OAATR,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBnB,EACvFtC,IAAkBD,EAAO,IAAM0C,IAA0C,OAATd,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBlB,EACvF,4BAGXI,IAAoC,OAAThB,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBX,EAAyB,4BAG1F,OAAPlD,QAAO,IAAPA,GAAc,QAAP2D,EAAP3D,EAAShB,aAAK,IAAA2E,GAAdA,EAAgBzE,MACbY,IAAgBL,EAAM,GACXW,IAAkBD,EAAO,IAAMoC,IAAqC,OAATR,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBrB,EACvFpC,IAAkBD,EAAO,IAAM0C,IAA0C,OAATd,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBf,EACvF,4BAGXC,IAAoC,OAAThB,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBb,EAAkB,4BAGnF,OAAPhD,QAAO,IAAPA,GAAc,QAAP4D,EAAP5D,EAAShB,aAAK,IAAA4E,GAAdA,EAAgB3E,MACVa,IAAgBL,EAAM,IAAM8C,IAAqC,OAATR,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBrB,EACpF1C,IAAgBL,EAAM,IAAMsD,IAAoC,OAAThB,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBb,EAC9E,2BAGXlD,IAAgBL,EAAM,GAAE,uKAAA2C,OAAwCjE,EAAW,KACxE4E,IAAoC,OAAThB,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBb,EAClD,2BAhCXlD,IAAgBL,EAAM,GAAE,uKAAA2C,OAAwCjE,EAAW,KACxE4E,IAAoC,OAAThB,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBX,EAClD,2BAPXpD,IAAgBL,EAAM,IAAM8C,IAAqC,OAATR,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBnB,EACpF5C,IAAgBL,EAAM,IAAMsD,IAAoC,OAAThB,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAW8B,mBAAoBX,EAC9E,4BAuCnBY,MAAM,4GACrB,EA4BkB1C,CAAejD,EAAamC,EAAeR,EAAaM,GAC1E,CACA,MAAO2D,GACCC,QAAQC,IAAIF,EAAIvF,SAChBiC,EAAU,gPAClB,GAM6CzC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJgD,EAAAA,EAAAA,MAAA,SAAAhD,SAAA,CAAO,2HAECF,EAAAA,EAAAA,KAAA,SAAOoG,KAAK,cACJC,aAAcrE,EACdsE,SAlCrBvD,IACnBd,EAAec,EAAMC,OAAO5B,MAAM,EAkCMmF,QAASzD,EACT0D,QAAS1D,KAEjB9C,EAAAA,EAAAA,KAAA,YAAUyG,GAAG,cAAavG,SAEVyB,EAAM+E,KAAK9D,IACH5C,EAAAA,EAAAA,KAAA,UAAmB2G,KAAK,cAAcvF,MAAOwB,EAAK1C,SACzC0C,GADIA,WAO7C5C,EAAAA,EAAAA,KAAA,UACAkD,EAAAA,EAAAA,MAAA,SAAO0D,QAAQ,gBAAe1G,SAAA,CAAC,4DAEvBF,EAAAA,EAAAA,KAAA,SACQ2G,KAAK,gBACL/D,KAAK,SACL6D,GAAG,gBACHI,IAAI,IACJC,IAAI,OACJC,KAAK,MACL3F,MAAOoB,EACP8D,SA/D1BvD,IACdN,EAAiBM,EAAMC,OAAO5B,MAAM,QAiEZpB,EAAAA,EAAAA,KAAA,UACAkD,EAAAA,EAAAA,MAAA,SAAAhD,SAAA,CAAO,yEAECF,EAAAA,EAAAA,KAAA,SAAOoG,KAAK,cACJC,aAAchG,EACdiG,SA3EzBvD,IACfhB,EAAegB,EAAMC,OAAO5B,MAAM,EA2EMmF,QAASzD,EACT0D,QAAS1D,KAEjB9C,EAAAA,EAAAA,KAAA,YAAUyG,GAAG,cAAavG,SAEV0B,EAAS8E,KAAKxE,IAAO,IAAA8E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACbrH,EAAAA,EAAAA,KAAA,UAEQ2G,KAAK,cACLvF,MAAc,OAAPc,QAAO,IAAPA,GAAc,QAAP+E,EAAP/E,EAAShB,aAAK,IAAA+F,GAAdA,EAAgB9F,OAASa,IAAgBL,EAAM,GAAY,OAAPO,QAAO,IAAPA,GAAgB,QAATgF,EAAPhF,EAAS9B,eAAO,IAAA8G,OAAT,EAAPA,EAAkB7G,YACnE2B,IAAgBL,EAAM,GAAY,OAAPO,QAAO,IAAPA,GAAgB,QAATiF,EAAPjF,EAAS9B,eAAO,IAAA+G,OAAT,EAAPA,EAAkB9G,YACrC,GAAGH,SACpB8B,IAAgBL,EAAM,GAAY,OAAPO,QAAO,IAAPA,GAAa,QAANkF,EAAPlF,EAASpB,YAAI,IAAAsG,OAAN,EAAPA,EAAepG,cAAuB,OAAPkB,QAAO,IAAPA,GAAa,QAANmF,EAAPnF,EAASpB,YAAI,IAAAuG,OAAN,EAAPA,EAAetG,YAL9D,OAAPmB,QAAO,IAAPA,GAAgB,QAAT8E,EAAP9E,EAAS9B,eAAO,IAAA4G,OAAT,EAAPA,EAAkB3G,YAMtB,UAKzCL,EAAAA,EAAAA,KAAA,UAC2B,KAAnB,OAAPkC,QAAO,IAAPA,GAAc,QAAPR,EAAPQ,EAAShB,aAAK,IAAAQ,OAAP,EAAPA,EAAgBN,QAAkBY,IAAgBL,EAAM,KAAM3B,EAAAA,EAAAA,KAAA,OAAAE,UACvDgD,EAAAA,EAAAA,MAAA,SAAAhD,SAAA,CAAO,6GAECF,EAAAA,EAAAA,KAAA,SAAOoG,KAAK,gBACJhF,MAAOkB,GAAiB,GACxBgE,SAxF3BvD,IACrBR,EAAiBQ,EAAMC,OAAO5B,MAAM,EAwFYmF,QAASzD,EACT0D,QAAS1D,KAEjB9C,EAAAA,EAAAA,KAAA,YAAUyG,GAAG,gBAAevG,SAEZmC,EAAOqE,KAAKtF,IACJpB,EAAAA,EAAAA,KAAA,UAAoByG,GAAG,gBAAgBE,KAAK,gBAAgBvF,MAAOA,GAAS,GAAGlB,SACtEkB,GADIA,aAQrDpB,EAAAA,EAAAA,KAAA,UACAkD,EAAAA,EAAAA,MAAA,OAAK/C,UAAU,OAAMD,SAAA,CAAC,sDAEdF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,SAAQD,SAAEwC,QAE/B1C,EAAAA,EAAAA,KAAA,UAAQ4C,KAAK,SAAQ1C,SAAC,6BAG3C,C,gDChQZ,MAAM+D,EAAY,CAEvBC,aAAc,CAAEoD,sBAAuB,EAAGC,sBAAuB,GAEjEC,eAAgB,CAAEC,kBAAkB,GACpC9C,oBAAsB+C,IACpBC,EAAAA,EAAAA,YAAWC,OAAOF,IAAa,EAAGzD,EAAUuD,gBAC9CzB,kBAAmB,IACnB8B,aAAc,gPACdC,YAAa,4G,uBCXf,IAAIC,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAE,OAAOC,eAAeC,EAAS,aAAc,CAAEjH,OAAO,IACtD,IAAIkH,EAAoBP,EAAgBQ,EAAQ,OAehDF,EAAAA,QAb6B,SAAUjH,GACnC,IAAIoH,EAAU,EACVC,EAAa,EASjB,OARAN,OAAOO,KAAKJ,EAAkBK,SAASC,SAAQ,SAAUC,GACrD,IAAIC,EAAUC,WAAWF,GACrBG,EAAgBC,KAAKC,IAAI9H,EAAQ0H,GACjCE,EAAgBP,IAChBA,EAAaO,EACbR,EAAUM,EAElB,IACON,CACX,C,eClBAL,OAAOC,eAAeC,EAAS,aAAc,CAAEjH,OAAO,IA2EtDiH,EAAAA,QA1EsB,CAClB,GAAK,CACDc,OAAQ,SACRC,SAAU,QAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,OACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,SACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,OACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,OACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,O,uBCxElB,IAAIrB,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAE,OAAOC,eAAeC,EAAS,aAAc,CAAEjH,OAAO,IACtDiH,EAAQgB,UAAYhB,EAAQV,gBAAa,EACzC,IAAI2B,EAAef,EAAQ,MAC3BJ,OAAOC,eAAeC,EAAS,aAAc,CAAEkB,YAAY,EAAMC,IAAK,WAAc,OAAOzB,EAAgBuB,GAAcX,OAAS,IAClI,IAAIc,EAAclB,EAAQ,MAC1BJ,OAAOC,eAAeC,EAAS,YAAa,CAAEkB,YAAY,EAAMC,IAAK,WAAc,OAAOzB,EAAgB0B,GAAad,OAAS,G,uBCRhI,IAAIZ,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAE,OAAOC,eAAeC,EAAS,aAAc,CAAEjH,OAAO,IACtD,IAAIkH,EAAoBP,EAAgBQ,EAAQ,OAgBhDF,EAAAA,QAdgB,SAAUjH,GACtB,GAAqB,kBAAVA,EACP,OAAOA,EAEX,GAAc,KAAVA,QAA0BsI,IAAVtI,GAAiC,OAAVA,EACvC,OAAO,EAEX,IAAIuI,EAAKvI,EAAMmD,MAAM,KAAMqF,EAAMD,EAAG,GAAIP,EAAWO,EAAG,GACtD,QAAiBD,IAAbN,GAAuC,KAAbA,EAC1B,OAAOL,WAAWa,GAEtB,IAAId,EAAUX,OAAOO,KAAKJ,EAAkBK,SAASxG,MAAK,SAAU0G,GAAO,OAAOP,EAAkBK,QAAQE,GAAKM,SAAWC,GAAYd,EAAkBK,QAAQE,GAAKO,WAAaA,CAAU,KAAMA,EACpM,OAAOL,WAAWa,GAAOb,WAAWD,EACxC,C,uBCnBA,IAAIf,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAE,OAAOC,eAAeC,EAAS,aAAc,CAAEjH,OAAO,IACtD,IAAIkH,EAAoBP,EAAgBQ,EAAQ,OAC5CsB,EAA2B9B,EAAgBQ,EAAQ,OAiBvDF,EAAAA,QAfiB,SAAUS,EAASa,GAChC,IAAIG,EAAKH,EAAGlC,iBAAkBA,OAA0B,IAAPqC,GAAuBA,EAExE,GAAIhB,EAAU,IAAM,EAChB,OAAOA,EAAQiB,WAEnB,IAAIC,GAAkBlB,EAAUG,KAAKgB,MAAMnB,IAAUoB,QAAQ,GACzDC,EAAgBlB,KAAKmB,MAAMtB,GAG/B,OAFAqB,EAAkC,IAAlBA,EAAsB,GAAK,GAAG7F,OAAO6F,EAAe,KAEhE1C,EACO,GAAGnD,OAAO6F,GAAe7F,OAAOgE,EAAkBK,SAAQ,EAAIkB,EAAyBlB,SAASqB,IAAiBb,QAErH,GAAG7E,OAAO6F,GAAe7F,OAAOgE,EAAkBK,SAAQ,EAAIkB,EAAyBlB,SAASqB,IAAiBZ,SAC5H,C","sources":["components/FormFrame.jsx","services/Milk/milk.js","components/Milk/Milk.jsx","components/variables.js","../node_modules/fraction-parser/lib/helpers/getClosestLookupNumber.js","../node_modules/fraction-parser/lib/helpers/numberLookupMap.js","../node_modules/fraction-parser/lib/index.js","../node_modules/fraction-parser/lib/toDecimal.js","../node_modules/fraction-parser/lib/toFraction.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const milk = [\r\n        {\r\n                details: {\r\n                        productName: 'גבינה מותכת',\r\n                        value1: 2,\r\n                        value2: 0,\r\n                        gram: 60,\r\n                        sugar: 0,\r\n                        message: '.דל בפחמימות ומכיל יותר חלבון ו/או שומן (120 קלוריות) *',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(משולש)',\r\n                        measures: ['משולש', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: true,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'גבינה צהובה (22%)',\r\n                        value1: 2,\r\n                        value2: 0,\r\n                        gram: 40,\r\n                        sugar: 0,\r\n                        message: '.דל בפחמימות ומכיל יותר חלבון ו/או שומן (120 קלוריות) *',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פרוסה)',\r\n                        measures: ['פרוסה', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: true,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'גבינה מלוחה (16%)',\r\n                        value1: 0,\r\n                        value2: 0,\r\n                        gram: 60,\r\n                        sugar: 0,\r\n                        message: '.דל בפחמימות ומכיל יותר חלבון ו/או שומן (120 קלוריות) *',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                        measureString1: '-',\r\n                        measureString2: '',\r\n                        measures: ['-', ''],\r\n\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: true,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: `גבינה לבנה/קוטג' (5%)`,\r\n                        value1: 0.5,\r\n                        value2: 5,\r\n                        gram: 125,\r\n                        sugar: 0,\r\n                        message: '.דל בפחמימות ומכיל יותר חלבון ו/או שומן (120 קלוריות) *',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(חבילה/כף)',\r\n                        measures: ['חצי חבילה', 'כף'],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: true,\r\n                        value: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'חלב (3% שומן)',\r\n                        value1: 1,\r\n                        value2: 0,\r\n                        gram: 200,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(כוס)',\r\n                        measures: ['כוס', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'יוגורט (3%)',\r\n                        value1: 1,\r\n                        value2: 0,\r\n                        gram: 170,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע קטן)',\r\n                        measures: ['גביע קטן', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'יוגורט/קפיר',\r\n                        value1: 1,\r\n                        value2: 1,\r\n                        gram: 170,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע/כוס)',\r\n                        measures: ['גביע', 'כוס'],\r\n\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'לבן (3% שומן)',\r\n                        value1: 1,\r\n                        value2: 1,\r\n                        gram: 170,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע/כוס)',\r\n                        measures: ['גביע', 'כוס'],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'לבנה (4.5% שומן)',\r\n                        value1: 1,\r\n                        value2: 0.75,\r\n                        gram: 150,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע קטן/כוס)',\r\n                        measures: ['גביע קטן', 'כוס'],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'מעדן שוקולד/וניל',\r\n                        value1: 1,\r\n                        value2: 0,\r\n                        gram: 125,\r\n                        sugar: 1,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 1,\r\n                        sugarCalculationGram: 125,\r\n                        sugarString: ' יש להוסיף מנות סוכר *',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע קטן)',\r\n                        measures: ['גביע קטן', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: true,\r\n                        message: false,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פריגורט',\r\n                        value1: 1,\r\n                        value2: 0,\r\n                        gram: 150,\r\n                        sugar: 1,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 1,\r\n                        sugarCalculationGram: 150,\r\n                        sugarString: ' יש להוסיף מנות סוכר *',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע)',\r\n                        measures: ['גביע', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: true,\r\n                        message: false,\r\n                        value: false,\r\n                },\r\n        },\r\n];\r\nexport default milk;  ","// import react states\r\nimport { useState, useEffect } from 'react';\r\n// import service \r\nimport milk from '../../services/Milk/milk';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst Milk = () => {\r\n        // array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(milk);\r\n        const [productName, setProductName] = useState(milk[0]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        //  array of value calculation\r\n        const values = [product?.unit?.measures[0], product?.unit?.measures[1]];\r\n        const [productValues, setProductValues] = useState(values[0]);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n        // Get array of value\r\n        const value = values.find(value => value === productValues);\r\n\r\n        useEffect(() => {\r\n                if (values[0]) {\r\n                        setProductValues(values[0]);\r\n                }\r\n                else {\r\n                        setProductValues(values[1]);\r\n                }\r\n        }, [product]);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType, productValues) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value1).toLocaleString(variables?.numberFormat);\r\n                // Calculate countValue2 \r\n                const countValue2 = (amount / product?.details?.value2).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate message \r\n                const message = product?.details?.message;\r\n                // Calculate sugar \r\n                const sugar = (amount / product?.sugar?.sugarCalculation).toLocaleString(variables?.numberFormat);\r\n                // Calculate sugarGram \r\n                const sugarGram = (amount / product?.sugar?.sugarCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate sugarString0 \r\n                const sugarString0 = `${product?.sugar?.sugarString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate sugarString1 \r\n                const sugarString1 = product?.sugar?.sugarString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count message reasult using toFraction \r\n                const calculationCountMessage = ` ${variables?.fractionCalculation(count)}\\n ${message}`;\r\n                // Calculate count Value2 message reasult using toFraction \r\n                const calculationCountValue2Message = ` ${variables?.fractionCalculation(countValue2)}\\n ${message}`;\r\n                // Calculate count sugar reasult using toFraction  \r\n                const calculationCountSugar = ` ${variables?.fractionCalculation(count)}\\n ${sugarString0} ${variables?.fractionCalculation(sugar)} ${sugarString1}`;\r\n                // Use to comparison count value with NEGLIGIBLE_NUMBER\r\n                const calculationCountValueFraction = ` ${countValue2}`;\r\n                // Calculate count value2 reasult using toFraction \r\n                const calculationCountValue2 = ` ${variables?.fractionCalculation(countValue2)}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction \r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram sugar reasult using toFraction \r\n                const calculationGramSugar = ` ${variables?.fractionCalculation(gram)}\\n ${sugarString0} ${variables?.fractionCalculation(sugarGram)} ${sugarString1}`;\r\n                // Calculate gram message reasult using toFraction \r\n                const calculationGramMessage = ` ${variables?.fractionCalculation(gram)}\\n ${message}`;\r\n\r\n                if (product && type && value) {\r\n                        if (product?.check?.sugar) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountSugar\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramSugar\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.message && !product?.check?.value) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountMessage\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramMessage\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (!product?.check?.count && product?.check?.message) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramMessage\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.value && product?.check?.message) {\r\n                                if (productType === types[0]) {\r\n                                        return productValues === values[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountMessage\r\n                                                : productValues === values[1] && calculationCountValueFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountValue2Message\r\n                                                        : ' זניח';\r\n                                }\r\n                                else {\r\n                                        return calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramMessage : ' זניח';\r\n                                }\r\n                        }\r\n                        else if (product?.check?.value) {\r\n                                if (productType === types[0]) {\r\n                                        return productValues === values[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                                : productValues === values[1] && calculationCountValueFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountValue2\r\n                                                        : ' זניח';\r\n                                }\r\n                                else {\r\n                                        return calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram : ' זניח';\r\n                                }\r\n                        }\r\n                        else if (product?.check?.count) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert('הערך שהוזן אינו קיים');\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        const handleProductValues = (event) => {\r\n                setProductValues(event.target.value);\r\n        };\r\n\r\n        // Clean input field when click it \r\n        const handleClear = (event) => {\r\n                event.target.value = \"\";\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType, productValues));\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult('קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר');\r\n                }\r\n        };\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <h1>חלב</h1>\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                <input list=\"productType\"\r\n                                                        defaultValue={productType}\r\n                                                        onChange={handleProductType}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productType\">\r\n                                                        {\r\n                                                                types.map((type) => (\r\n                                                                        <option key={type} name=\"productType\" value={type}>\r\n                                                                                {type}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br />\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <br />\r\n                                        <label>\r\n                                                סוג מוצר החלב:\r\n                                                <input list=\"productName\"\r\n                                                        defaultValue={productName}\r\n                                                        onChange={handleProduct}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productName\">\r\n                                                        {\r\n                                                                products.map((product) => (\r\n                                                                        <option\r\n                                                                                key={product?.details?.productName}\r\n                                                                                name=\"productName\"\r\n                                                                                value={product?.check?.count && productType === types[0] ? product?.details?.productName\r\n                                                                                        : productType === types[1] ? product?.details?.productName\r\n                                                                                                : ''}>\r\n                                                                                {productType === types[0] ? product?.unit?.measureString : product?.unit?.gramString}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br />\r\n                                        {product?.check?.value === true && productType === types[0] && <div>\r\n                                                <label>\r\n                                                        בחירת סוג חישוב כמות\r\n                                                        <input list=\"productValues\"\r\n                                                                value={productValues || ''}\r\n                                                                onChange={handleProductValues}\r\n                                                                onClick={handleClear}\r\n                                                                onFocus={handleClear}\r\n                                                        />\r\n                                                        <datalist id=\"productValues\">\r\n                                                                {\r\n                                                                        values.map((value) => (\r\n                                                                                <option key={value} id=\"productValues\" name=\"productValues\" value={value || ''}>\r\n                                                                                        {value}\r\n                                                                                </option>\r\n                                                                        ))\r\n                                                                }\r\n                                                        </datalist>\r\n                                                </label>\r\n                                        </div>}\r\n                                        <br />\r\n                                        <div className='div1'>\r\n                                                מספר מנות:\r\n                                                <p className='result'>{result}</p>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default Milk;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./numberLookupMap\"));\n// get the closest vulgar fraction from a decimal\nvar getClosestLookupNumber = function (value) {\n    var closest = 0;\n    var difference = 1;\n    Object.keys(numberLookupMap_1.default).forEach(function (key) {\n        var decimal = parseFloat(key);\n        var newDifference = Math.abs(value - decimal);\n        if (newDifference < difference) {\n            difference = newDifference;\n            closest = decimal;\n        }\n    });\n    return closest;\n};\nexports.default = getClosestLookupNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap = {\n    0.1: {\n        vulgar: '⅒',\n        fraction: '1/10',\n    },\n    0.11: {\n        vulgar: '⅑',\n        fraction: '1/9',\n    },\n    0.12: {\n        vulgar: '⅛',\n        fraction: '1/8',\n    },\n    0.14: {\n        vulgar: '⅐',\n        fraction: '1/7',\n    },\n    0.16: {\n        vulgar: '⅙',\n        fraction: '1/6',\n    },\n    0.2: {\n        vulgar: '⅕',\n        fraction: '1/5',\n    },\n    0.25: {\n        vulgar: '¼',\n        fraction: '1/4',\n    },\n    0.33: {\n        vulgar: '⅓',\n        fraction: '1/3',\n    },\n    0.37: {\n        vulgar: '⅜',\n        fraction: '3/8',\n    },\n    0.4: {\n        vulgar: '⅖',\n        fraction: '2/5',\n    },\n    0.5: {\n        vulgar: '½',\n        fraction: '1/2',\n    },\n    0.6: {\n        vulgar: '⅗',\n        fraction: '3/5',\n    },\n    0.62: {\n        vulgar: '⅝',\n        fraction: '5/8',\n    },\n    0.66: {\n        vulgar: '⅔',\n        fraction: '2/3',\n    },\n    0.75: {\n        vulgar: '¾',\n        fraction: '3/4',\n    },\n    0.8: {\n        vulgar: '⅘',\n        fraction: '4/5',\n    },\n    0.83: {\n        vulgar: '⅚',\n        fraction: '5/6',\n    },\n    0.87: {\n        vulgar: '⅞',\n        fraction: '7/8',\n    },\n};\nexports.default = numberLookupMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDecimal = exports.toFraction = void 0;\nvar toFraction_1 = require(\"./toFraction\");\nObject.defineProperty(exports, \"toFraction\", { enumerable: true, get: function () { return __importDefault(toFraction_1).default; } });\nvar toDecimal_1 = require(\"./toDecimal\");\nObject.defineProperty(exports, \"toDecimal\", { enumerable: true, get: function () { return __importDefault(toDecimal_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\n// function that takes a unicode vulgar or a fraction and returns a decimal\nvar toDecimal = function (value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (value === '' || value === undefined || value === null) {\n        return 0;\n    }\n    var _a = value.split(' '), int = _a[0], fraction = _a[1];\n    if (fraction === undefined || fraction === '') {\n        return parseFloat(int);\n    }\n    var decimal = Object.keys(numberLookupMap_1.default).find(function (key) { return numberLookupMap_1.default[key].vulgar === fraction || numberLookupMap_1.default[key].fraction === fraction; }) || fraction;\n    return parseFloat(int) + parseFloat(decimal);\n};\nexports.default = toDecimal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\nvar getClosestLookupNumber_1 = __importDefault(require(\"./helpers/getClosestLookupNumber\"));\n// functions that returns a string representation of a fraction from a number\nvar toFraction = function (decimal, _a) {\n    var _b = _a.useUnicodeVulgar, useUnicodeVulgar = _b === void 0 ? true : _b;\n    // if the number is a whole number, return it as a string\n    if (decimal % 1 === 0) {\n        return decimal.toString();\n    }\n    var decimalPortion = (decimal - Math.floor(decimal)).toFixed(2);\n    var numberPortion = Math.trunc(decimal);\n    numberPortion = numberPortion === 0 ? '' : \"\".concat(numberPortion, \" \");\n    // if the number is a decimal, return it as a fraction\n    if (useUnicodeVulgar) {\n        return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].vulgar);\n    }\n    return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].fraction);\n};\nexports.default = toFraction;\n"],"names":["props","_jsx","_Fragment","children","className","details","productName","value1","value2","gram","sugar","message","sugarCalculation","sugarCalculationGram","sugarString","unit","gramString","measureString","measures","check","count","value","measureString1","measureString2","Milk","_product$unit","_product$unit2","_product$check12","types","products","useState","milk","setProductName","productType","setProductType","product","find","_product$details","values","productValues","setProductValues","productAmount","setProductAmount","result","setResult","type","useEffect","handleClear","event","target","FormFrame","_jsxs","onSubmit","e","preventDefault","calculateValue","amount","_product$details2","_product$details3","_product$details4","_product$details5","_product$sugar","_product$sugar2","_product$sugar3","_product$sugar4","toLocaleString","variables","numberFormat","countValue2","sugarGram","sugarString0","concat","split","sugarString1","calculationCountFraction","calculationCount","fractionCalculation","calculationCountMessage","calculationCountValue2Message","calculationCountSugar","calculationCountValueFraction","calculationCountValue2","calculationGramFraction","calculationGram","calculationGramSugar","calculationGramMessage","_product$check","_product$check2","_product$check3","_product$check4","_product$check5","_product$check6","_product$check7","_product$check8","_product$check9","_product$check10","NEGLIGIBLE_NUMBER","alert","err","console","log","list","defaultValue","onChange","onClick","onFocus","id","map","name","htmlFor","min","max","step","_product$details6","_product$check11","_product$details7","_product$details8","_product$unit3","_product$unit4","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number","stringResult","stringAlert","__importDefault","this","mod","__esModule","Object","defineProperty","exports","numberLookupMap_1","require","closest","difference","keys","default","forEach","key","decimal","parseFloat","newDifference","Math","abs","vulgar","fraction","toDecimal","toFraction_1","enumerable","get","toDecimal_1","undefined","_a","int","getClosestLookupNumber_1","_b","toString","decimalPortion","floor","toFixed","numberPortion","trunc"],"sourceRoot":""}