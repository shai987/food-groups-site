{"version":3,"file":"static/js/16.6ba37df1.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Meat&Substitutes/meats.js","components/Meat&Substitutes/Meat.jsx","components/variables.js","../node_modules/fraction-parser/lib/helpers/getClosestLookupNumber.js","../node_modules/fraction-parser/lib/helpers/numberLookupMap.js","../node_modules/fraction-parser/lib/index.js","../node_modules/fraction-parser/lib/toDecimal.js","../node_modules/fraction-parser/lib/toFraction.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const meats = [\r\n        {\r\n                details: {\r\n                        productName: 'איברים פנימיים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(טחול, כבד, לבבות, קורקבנים)',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר בקר',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר הודו ללא עור',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 1,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: ' יש להוריד מנת שומן *',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 90,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: true,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר הודו עם עור',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף ללא עור (עם עצם)',\r\n                        value: 0.25,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 1,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: ' יש להוריד מנת שומן *',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 150,\r\n                        portionFatCalculationCount: 0.25,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם, שקול עם עצם)',\r\n                        measureString: '(עוף קטן מספר 1)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: true,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף עם עור (עם עצם)',\r\n                        value: 0.25,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם, שקול עם עצם)',\r\n                        measureString: '(עוף קטן מספר 1)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דג מעושן/משומר בשמן/מלוח',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים משומרים במים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים רזים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: `.(מכיל עד 5 גר' שומן ב-100 גרם (מבושל *`,\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים רזים (עם עצמות)',\r\n                        value: 0,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: `.(מכיל עד 5 גר' שומן ב-100 גרם (מבושל *`,\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים שמנים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים שמנים (עם עצמות)',\r\n                        value: 0,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'כבש',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקניק',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקנקיות',\r\n                        value: 3,\r\n                        gram: 120,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פסטרמה',\r\n                        value: 6,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0.6,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פרוסה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'שניצל (עוף/הודו)',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0.5,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: ' יש להוסיף מנת לחם *',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 200,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: true,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n];\r\nexport default meats;  ","// import react state\r\nimport { useState } from 'react';\r\n// import service \r\nimport meats from '../../services/Meat&Substitutes/meats';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\nconst Meat = () => {\r\n        //  array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(meats);\r\n        const [productName, setProductName] = useState(meats[4]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate countPortionFat \r\n                const countPortionFat = (amount / product?.breadFat?.portionFatCalculationCount).toLocaleString(variables?.numberFormat);\r\n                // Calculate countFat \r\n                const countFat = (amount / product?.breadFat?.fatCalculationCount).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramPortionFat \r\n                const gramPortionFat = (amount / product?.breadFat?.portionFatCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramFat \r\n                const gramFat = (amount / product?.details?.fat).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramBread \r\n                const gramBread = (amount / product?.breadFat?.breadCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate message \r\n                const message = product?.details?.message;\r\n                // Calculate fatString0 \r\n                const fatString0 = `${product?.breadFat?.fatString.split(\" יש להוריד \")[0]} יש להוריד`;\r\n                // Calculate fatString1 \r\n                const fatString1 = product?.breadFat?.fatString.split(\" יש להוריד \")[1];\r\n                // Calculate portionFatString0 \r\n                const portionFatString0 = `${product?.breadFat?.portionFatString.split(\" יש להוריד \")[0]} יש להוריד`;\r\n                // Calculate portionFatString1 \r\n                const portionFatString1 = product?.breadFat?.portionFatString.split(\" יש להוריד \")[1];\r\n                // Calculate breadString0 \r\n                const breadString0 = `${product?.breadFat?.breadString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate breadString1 \r\n                const breadString1 = product?.breadFat?.breadString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count portionFat reasult using toFraction   \r\n                const calculationCountPortionFat = ` ${variables?.fractionCalculation(count)}\\n ${portionFatString0} ${variables?.fractionCalculation(countPortionFat)} ${portionFatString1}`;\r\n                // Calculate count fat reasult using toFraction  \r\n                const calculationCountFat = ` ${variables?.fractionCalculation(count)}\\n ${fatString0} ${variables?.fractionCalculation(countFat)} ${fatString1}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction\r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram portionFat reasult using toFraction  \r\n                const calculationGramPortionFat = ` ${variables?.fractionCalculation(gram)}\\n ${portionFatString0} ${variables?.fractionCalculation(gramPortionFat)} ${portionFatString1}`;\r\n                // Calculate gram fat reasult using toFraction \r\n                const calculationGramFat = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gramFat)} ${fatString1}`;\r\n                // Calculate gram bread reasult using toFraction\r\n                const calculationGramBread = ` ${variables?.fractionCalculation(gram)}\\n ${breadString0} ${variables?.fractionCalculation(gramBread)} ${breadString1}`;\r\n                // Calculate gram fat message reasult using toFraction \r\n                const calculationGramFatMessage = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gramFat)} ${fatString1}\\n ${message}`;\r\n\r\n                if (product && type) {\r\n                        if (product?.check?.count && product?.check?.gram && product?.check?.portionFat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountPortionFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramPortionFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.portionFat) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramPortionFat\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat && product?.check?.message) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFatMessage\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.bread) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramBread\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert('הערך שהוזן אינו קיים');\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        // Clean input field when click it \r\n        const handleClear = (event) => {\r\n                event.target.value = \"\";\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType));\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult('קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר');\r\n                }\r\n        };\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <div>\r\n                                                <h1>בשר</h1>\r\n                                                <h3>*כ-100 גרם בשר מבושל הם שווה ערך ל-130 גרם בשר טרי. הערכים הינם לאחר בישול.</h3>\r\n                                        </div>\r\n                                        <br />\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                <input list=\"productType\"\r\n                                                        defaultValue={productType}\r\n                                                        onChange={handleProductType}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productType\">\r\n                                                        {\r\n                                                                types.map((type) => (\r\n                                                                        <option key={type} name=\"productType\" value={type}>\r\n                                                                                {type}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <label>\r\n                                                סוג הבשר:\r\n                                                <input list=\"productName\"\r\n                                                        defaultValue={productName}\r\n                                                        onChange={handleProduct}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productName\">\r\n                                                        {\r\n                                                                products.map((product) => (\r\n                                                                        <option\r\n                                                                                key={product?.details?.productName}\r\n                                                                                name=\"productName\"\r\n                                                                                value={product?.check?.count && productType === types[0] ? product?.details?.productName\r\n                                                                                        : productType === types[1] ? product?.details?.productName\r\n                                                                                                : ''}>\r\n                                                                                {productType === types[0] ? product?.unit?.measureString : product?.unit?.gramString}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <div className='div1'>\r\n                                                מספר מנות:\r\n                                                <p className='result'>{result}</p>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default Meat;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./numberLookupMap\"));\n// get the closest vulgar fraction from a decimal\nvar getClosestLookupNumber = function (value) {\n    var closest = 0;\n    var difference = 1;\n    Object.keys(numberLookupMap_1.default).forEach(function (key) {\n        var decimal = parseFloat(key);\n        var newDifference = Math.abs(value - decimal);\n        if (newDifference < difference) {\n            difference = newDifference;\n            closest = decimal;\n        }\n    });\n    return closest;\n};\nexports.default = getClosestLookupNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap = {\n    0.1: {\n        vulgar: '⅒',\n        fraction: '1/10',\n    },\n    0.11: {\n        vulgar: '⅑',\n        fraction: '1/9',\n    },\n    0.12: {\n        vulgar: '⅛',\n        fraction: '1/8',\n    },\n    0.14: {\n        vulgar: '⅐',\n        fraction: '1/7',\n    },\n    0.16: {\n        vulgar: '⅙',\n        fraction: '1/6',\n    },\n    0.2: {\n        vulgar: '⅕',\n        fraction: '1/5',\n    },\n    0.25: {\n        vulgar: '¼',\n        fraction: '1/4',\n    },\n    0.33: {\n        vulgar: '⅓',\n        fraction: '1/3',\n    },\n    0.37: {\n        vulgar: '⅜',\n        fraction: '3/8',\n    },\n    0.4: {\n        vulgar: '⅖',\n        fraction: '2/5',\n    },\n    0.5: {\n        vulgar: '½',\n        fraction: '1/2',\n    },\n    0.6: {\n        vulgar: '⅗',\n        fraction: '3/5',\n    },\n    0.62: {\n        vulgar: '⅝',\n        fraction: '5/8',\n    },\n    0.66: {\n        vulgar: '⅔',\n        fraction: '2/3',\n    },\n    0.75: {\n        vulgar: '¾',\n        fraction: '3/4',\n    },\n    0.8: {\n        vulgar: '⅘',\n        fraction: '4/5',\n    },\n    0.83: {\n        vulgar: '⅚',\n        fraction: '5/6',\n    },\n    0.87: {\n        vulgar: '⅞',\n        fraction: '7/8',\n    },\n};\nexports.default = numberLookupMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDecimal = exports.toFraction = void 0;\nvar toFraction_1 = require(\"./toFraction\");\nObject.defineProperty(exports, \"toFraction\", { enumerable: true, get: function () { return __importDefault(toFraction_1).default; } });\nvar toDecimal_1 = require(\"./toDecimal\");\nObject.defineProperty(exports, \"toDecimal\", { enumerable: true, get: function () { return __importDefault(toDecimal_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\n// function that takes a unicode vulgar or a fraction and returns a decimal\nvar toDecimal = function (value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (value === '' || value === undefined || value === null) {\n        return 0;\n    }\n    var _a = value.split(' '), int = _a[0], fraction = _a[1];\n    if (fraction === undefined || fraction === '') {\n        return parseFloat(int);\n    }\n    var decimal = Object.keys(numberLookupMap_1.default).find(function (key) { return numberLookupMap_1.default[key].vulgar === fraction || numberLookupMap_1.default[key].fraction === fraction; }) || fraction;\n    return parseFloat(int) + parseFloat(decimal);\n};\nexports.default = toDecimal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\nvar getClosestLookupNumber_1 = __importDefault(require(\"./helpers/getClosestLookupNumber\"));\n// functions that returns a string representation of a fraction from a number\nvar toFraction = function (decimal, _a) {\n    var _b = _a.useUnicodeVulgar, useUnicodeVulgar = _b === void 0 ? true : _b;\n    // if the number is a whole number, return it as a string\n    if (decimal % 1 === 0) {\n        return decimal.toString();\n    }\n    var decimalPortion = (decimal - Math.floor(decimal)).toFixed(2);\n    var numberPortion = Math.trunc(decimal);\n    numberPortion = numberPortion === 0 ? '' : \"\".concat(numberPortion, \" \");\n    // if the number is a decimal, return it as a fraction\n    if (useUnicodeVulgar) {\n        return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].vulgar);\n    }\n    return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].fraction);\n};\nexports.default = toFraction;\n"],"names":["props","className","children","details","productName","value","gram","bread","fat","portionFat","message","breadFat","breadString","fatString","portionFatString","fatCalculationCount","portionFatCalculationGram","portionFatCalculationCount","breadCalculationGram","unit","gramString","measureString","check","count","types","useState","meats","products","setProductName","productType","setProductType","productAmount","setProductAmount","result","setResult","product","find","type","handleClear","event","target","FormFrame","onSubmit","e","preventDefault","amount","toLocaleString","variables","numberFormat","countPortionFat","countFat","gramPortionFat","gramFat","gramBread","fatString0","split","fatString1","portionFatString0","portionFatString1","breadString0","breadString1","calculationCountFraction","calculationCount","fractionCalculation","calculationCountPortionFat","calculationCountFat","calculationGramFraction","calculationGram","calculationGramPortionFat","calculationGramFat","calculationGramBread","calculationGramFatMessage","NEGLIGIBLE_NUMBER","alert","calculateValue","err","console","log","list","defaultValue","onChange","onClick","onFocus","id","map","name","htmlFor","min","max","step","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number","stringResult","stringAlert","__importDefault","this","mod","__esModule","Object","defineProperty","exports","numberLookupMap_1","require","closest","difference","keys","default","forEach","key","decimal","parseFloat","newDifference","Math","abs","vulgar","fraction","toDecimal","toFraction_1","enumerable","get","toDecimal_1","undefined","_a","int","getClosestLookupNumber_1","_b","toString","decimalPortion","floor","toFixed","numberPortion","trunc","concat"],"sourceRoot":""}