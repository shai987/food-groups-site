{"version":3,"file":"static/js/866.5ccce307.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Milk/milk.js","components/Milk/Milk.jsx","components/variables.js","../node_modules/fraction-parser/lib/helpers/getClosestLookupNumber.js","../node_modules/fraction-parser/lib/helpers/numberLookupMap.js","../node_modules/fraction-parser/lib/index.js","../node_modules/fraction-parser/lib/toDecimal.js","../node_modules/fraction-parser/lib/toFraction.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const milk = [\r\n        {\r\n                details: {\r\n                        productName: 'גבינה מותכת',\r\n                        value1: 2,\r\n                        value2: 0,\r\n                        gram: 60,\r\n                        sugar: 0,\r\n                        message: '.דל בפחמימות ומכיל יותר חלבון ו/או שומן (120 קלוריות) *',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(משולש)',\r\n                        measures: ['משולש', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: true,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'גבינה צהובה (22%)',\r\n                        value1: 2,\r\n                        value2: 0,\r\n                        gram: 40,\r\n                        sugar: 0,\r\n                        message: '.דל בפחמימות ומכיל יותר חלבון ו/או שומן (120 קלוריות) *',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פרוסה)',\r\n                        measures: ['פרוסה', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: true,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'גבינה מלוחה (16%)',\r\n                        value1: 0,\r\n                        value2: 0,\r\n                        gram: 60,\r\n                        sugar: 0,\r\n                        message: '.דל בפחמימות ומכיל יותר חלבון ו/או שומן (120 קלוריות) *',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                        measureString1: '-',\r\n                        measureString2: '',\r\n                        measures: ['-', ''],\r\n\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: true,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: `גבינה לבנה/קוטג' (5%)`,\r\n                        value1: 0.5,\r\n                        value2: 5,\r\n                        gram: 125,\r\n                        sugar: 0,\r\n                        message: '.דל בפחמימות ומכיל יותר חלבון ו/או שומן (120 קלוריות) *',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(חבילה/כף)',\r\n                        measures: ['חצי חבילה', 'כף'],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: true,\r\n                        value: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'חלב (3% שומן)',\r\n                        value1: 1,\r\n                        value2: 0,\r\n                        gram: 200,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(כוס)',\r\n                        measures: ['כוס', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'יוגורט (3%)',\r\n                        value1: 1,\r\n                        value2: 0,\r\n                        gram: 170,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע קטן)',\r\n                        measures: ['גביע קטן', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'יוגורט/קפיר',\r\n                        value1: 1,\r\n                        value2: 1,\r\n                        gram: 170,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע/כוס)',\r\n                        measures: ['גביע', 'כוס'],\r\n\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'לבן (3% שומן)',\r\n                        value1: 1,\r\n                        value2: 1,\r\n                        gram: 170,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע/כוס)',\r\n                        measures: ['גביע', 'כוס'],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'לבנה (4.5% שומן)',\r\n                        value1: 1,\r\n                        value2: 0.75,\r\n                        gram: 150,\r\n                        sugar: 0,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 0,\r\n                        sugarCalculationGram: 0,\r\n                        sugarString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע קטן/כוס)',\r\n                        measures: ['גביע קטן', 'כוס'],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: false,\r\n                        message: false,\r\n                        value: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'מעדן שוקולד/וניל',\r\n                        value1: 1,\r\n                        value2: 0,\r\n                        gram: 125,\r\n                        sugar: 1,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 1,\r\n                        sugarCalculationGram: 125,\r\n                        sugarString: ' יש להוסיף מנות סוכר *',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע קטן)',\r\n                        measures: ['גביע קטן', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: true,\r\n                        message: false,\r\n                        value: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פריגורט',\r\n                        value1: 1,\r\n                        value2: 0,\r\n                        gram: 150,\r\n                        sugar: 1,\r\n                        message: '',\r\n                },\r\n                sugar: {\r\n                        sugarCalculation: 1,\r\n                        sugarCalculationGram: 150,\r\n                        sugarString: ' יש להוסיף מנות סוכר *',\r\n                },\r\n                unit: {\r\n                        gramString: '(מ\"ל)',\r\n                        measureString: '(גביע)',\r\n                        measures: ['גביע', ''],\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        sugar: true,\r\n                        message: false,\r\n                        value: false,\r\n                },\r\n        },\r\n];\r\nexport default milk;  ","// import react states\r\nimport { useState, useEffect } from 'react';\r\n// import service \r\nimport milk from '../../services/Milk/milk';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst Milk = () => {\r\n        // array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(milk);\r\n        const [productName, setProductName] = useState(milk[0]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        //  array of value calculation\r\n        const values = [product?.unit?.measures[0], product?.unit?.measures[1]];\r\n        const [productValues, setProductValues] = useState(values[0]);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n        // Get array of value\r\n        const value = values.find(value => value === productValues);\r\n\r\n        useEffect(() => {\r\n                if (values[0]) {\r\n                        setProductValues(values[0]);\r\n                }\r\n                else {\r\n                        setProductValues(values[1]);\r\n                }\r\n        }, [product]);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType, productValues) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value1).toLocaleString(variables?.numberFormat);\r\n                // Calculate countValue2 \r\n                const countValue2 = (amount / product?.details?.value2).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate message \r\n                const message = product?.details?.message;\r\n                // Calculate sugar \r\n                const sugar = (amount / product?.sugar?.sugarCalculation).toLocaleString(variables?.numberFormat);\r\n                // Calculate sugarGram \r\n                const sugarGram = (amount / product?.sugar?.sugarCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate sugarString0 \r\n                const sugarString0 = `${product?.sugar?.sugarString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate sugarString1 \r\n                const sugarString1 = product?.sugar?.sugarString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count message reasult using toFraction \r\n                const calculationCountMessage = ` ${variables?.fractionCalculation(count)}\\n ${message}`;\r\n                // Calculate count Value2 message reasult using toFraction \r\n                const calculationCountValue2Message = ` ${variables?.fractionCalculation(countValue2)}\\n ${message}`;\r\n                // Calculate count sugar reasult using toFraction  \r\n                const calculationCountSugar = ` ${variables?.fractionCalculation(count)}\\n ${sugarString0} ${variables?.fractionCalculation(sugar)} ${sugarString1}`;\r\n                // Use to comparison count value with NEGLIGIBLE_NUMBER\r\n                const calculationCountValueFraction = ` ${countValue2}`;\r\n                // Calculate count value2 reasult using toFraction \r\n                const calculationCountValue2 = ` ${variables?.fractionCalculation(countValue2)}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction \r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram sugar reasult using toFraction \r\n                const calculationGramSugar = ` ${variables?.fractionCalculation(gram)}\\n ${sugarString0} ${variables?.fractionCalculation(sugarGram)} ${sugarString1}`;\r\n                // Calculate gram message reasult using toFraction \r\n                const calculationGramMessage = ` ${variables?.fractionCalculation(gram)}\\n ${message}`;\r\n\r\n                if (product && type && value) {\r\n                        if (product?.check?.sugar) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountSugar\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramSugar\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.message && !product?.check?.value) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountMessage\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramMessage\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (!product?.check?.count && product?.check?.message) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramMessage\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.value && product?.check?.message) {\r\n                                if (productType === types[0]) {\r\n                                        return productValues === values[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountMessage\r\n                                                : productValues === values[1] && calculationCountValueFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountValue2Message\r\n                                                        : ' זניח';\r\n                                }\r\n                                else {\r\n                                        return calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramMessage : ' זניח';\r\n                                }\r\n                        }\r\n                        else if (product?.check?.value) {\r\n                                if (productType === types[0]) {\r\n                                        return productValues === values[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                                : productValues === values[1] && calculationCountValueFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountValue2\r\n                                                        : ' זניח';\r\n                                }\r\n                                else {\r\n                                        return calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram : ' זניח';\r\n                                }\r\n                        }\r\n                        else if (product?.check?.count) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert('הערך שהוזן אינו קיים');\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        const handleProductValues = (event) => {\r\n                setProductValues(event.target.value);\r\n        };\r\n\r\n        // Clean input field when click it \r\n        const handleClear = (event) => {\r\n                event.target.value = \"\";\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType, productValues));\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult('קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר');\r\n                }\r\n        };\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <h1>חלב</h1>\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                <input list=\"productType\"\r\n                                                        defaultValue={productType}\r\n                                                        onChange={handleProductType}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productType\">\r\n                                                        {\r\n                                                                types.map((type) => (\r\n                                                                        <option key={type} name=\"productType\" value={type}>\r\n                                                                                {type}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br />\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <br />\r\n                                        <label>\r\n                                                סוג מוצר החלב:\r\n                                                <input list=\"productName\"\r\n                                                        defaultValue={productName}\r\n                                                        onChange={handleProduct}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productName\">\r\n                                                        {\r\n                                                                products.map((product) => (\r\n                                                                        <option\r\n                                                                                key={product?.details?.productName}\r\n                                                                                name=\"productName\"\r\n                                                                                value={product?.check?.count && productType === types[0] ? product?.details?.productName\r\n                                                                                        : productType === types[1] ? product?.details?.productName\r\n                                                                                                : ''}>\r\n                                                                                {productType === types[0] ? product?.unit?.measureString : product?.unit?.gramString}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br />\r\n                                        {product?.check?.value === true && productType === types[0] && <div>\r\n                                                <label>\r\n                                                        בחירת סוג חישוב כמות\r\n                                                        <input list=\"productValues\"\r\n                                                                value={productValues || ''}\r\n                                                                onChange={handleProductValues}\r\n                                                                onClick={handleClear}\r\n                                                                onFocus={handleClear}\r\n                                                        />\r\n                                                        <datalist id=\"productValues\">\r\n                                                                {\r\n                                                                        values.map((value) => (\r\n                                                                                <option key={value} id=\"productValues\" name=\"productValues\" value={value || ''}>\r\n                                                                                        {value}\r\n                                                                                </option>\r\n                                                                        ))\r\n                                                                }\r\n                                                        </datalist>\r\n                                                </label>\r\n                                        </div>}\r\n                                        <br />\r\n                                        <div className='div1'>\r\n                                                מספר מנות:\r\n                                                <p className='result'>{result}</p>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default Milk;","// Library that parse decimals into fractions  \r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n        // use for toLocaleString\r\n        numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n        // use for toFraction\r\n        fractionFormat: { useUnicodeVulgar: true },\r\n        fractionCalculation: (variable) => toFraction(Number(variable) || 0, variables.fractionFormat),\r\n        NEGLIGIBLE_NUMBER: 0.25,\r\n        stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n        stringAlert: 'הערך שהוזן אינו קיים',\r\n\r\n};","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./numberLookupMap\"));\n// get the closest vulgar fraction from a decimal\nvar getClosestLookupNumber = function (value) {\n    var closest = 0;\n    var difference = 1;\n    Object.keys(numberLookupMap_1.default).forEach(function (key) {\n        var decimal = parseFloat(key);\n        var newDifference = Math.abs(value - decimal);\n        if (newDifference < difference) {\n            difference = newDifference;\n            closest = decimal;\n        }\n    });\n    return closest;\n};\nexports.default = getClosestLookupNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap = {\n    0.1: {\n        vulgar: '⅒',\n        fraction: '1/10',\n    },\n    0.11: {\n        vulgar: '⅑',\n        fraction: '1/9',\n    },\n    0.12: {\n        vulgar: '⅛',\n        fraction: '1/8',\n    },\n    0.14: {\n        vulgar: '⅐',\n        fraction: '1/7',\n    },\n    0.16: {\n        vulgar: '⅙',\n        fraction: '1/6',\n    },\n    0.2: {\n        vulgar: '⅕',\n        fraction: '1/5',\n    },\n    0.25: {\n        vulgar: '¼',\n        fraction: '1/4',\n    },\n    0.33: {\n        vulgar: '⅓',\n        fraction: '1/3',\n    },\n    0.37: {\n        vulgar: '⅜',\n        fraction: '3/8',\n    },\n    0.4: {\n        vulgar: '⅖',\n        fraction: '2/5',\n    },\n    0.5: {\n        vulgar: '½',\n        fraction: '1/2',\n    },\n    0.6: {\n        vulgar: '⅗',\n        fraction: '3/5',\n    },\n    0.62: {\n        vulgar: '⅝',\n        fraction: '5/8',\n    },\n    0.66: {\n        vulgar: '⅔',\n        fraction: '2/3',\n    },\n    0.75: {\n        vulgar: '¾',\n        fraction: '3/4',\n    },\n    0.8: {\n        vulgar: '⅘',\n        fraction: '4/5',\n    },\n    0.83: {\n        vulgar: '⅚',\n        fraction: '5/6',\n    },\n    0.87: {\n        vulgar: '⅞',\n        fraction: '7/8',\n    },\n};\nexports.default = numberLookupMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDecimal = exports.toFraction = void 0;\nvar toFraction_1 = require(\"./toFraction\");\nObject.defineProperty(exports, \"toFraction\", { enumerable: true, get: function () { return __importDefault(toFraction_1).default; } });\nvar toDecimal_1 = require(\"./toDecimal\");\nObject.defineProperty(exports, \"toDecimal\", { enumerable: true, get: function () { return __importDefault(toDecimal_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\n// function that takes a unicode vulgar or a fraction and returns a decimal\nvar toDecimal = function (value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (value === '' || value === undefined || value === null) {\n        return 0;\n    }\n    var _a = value.split(' '), int = _a[0], fraction = _a[1];\n    if (fraction === undefined || fraction === '') {\n        return parseFloat(int);\n    }\n    var decimal = Object.keys(numberLookupMap_1.default).find(function (key) { return numberLookupMap_1.default[key].vulgar === fraction || numberLookupMap_1.default[key].fraction === fraction; }) || fraction;\n    return parseFloat(int) + parseFloat(decimal);\n};\nexports.default = toDecimal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\nvar getClosestLookupNumber_1 = __importDefault(require(\"./helpers/getClosestLookupNumber\"));\n// functions that returns a string representation of a fraction from a number\nvar toFraction = function (decimal, _a) {\n    var _b = _a.useUnicodeVulgar, useUnicodeVulgar = _b === void 0 ? true : _b;\n    // if the number is a whole number, return it as a string\n    if (decimal % 1 === 0) {\n        return decimal.toString();\n    }\n    var decimalPortion = (decimal - Math.floor(decimal)).toFixed(2);\n    var numberPortion = Math.trunc(decimal);\n    numberPortion = numberPortion === 0 ? '' : \"\".concat(numberPortion, \" \");\n    // if the number is a decimal, return it as a fraction\n    if (useUnicodeVulgar) {\n        return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].vulgar);\n    }\n    return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].fraction);\n};\nexports.default = toFraction;\n"],"names":["props","className","children","details","productName","value1","value2","gram","sugar","message","sugarCalculation","sugarCalculationGram","sugarString","unit","gramString","measureString","measures","check","count","value","measureString1","measureString2","types","useState","milk","products","setProductName","productType","setProductType","product","find","values","productValues","setProductValues","productAmount","setProductAmount","result","setResult","type","useEffect","handleClear","event","target","FormFrame","onSubmit","e","preventDefault","amount","toLocaleString","variables","countValue2","sugarGram","sugarString0","split","sugarString1","calculationCountFraction","calculationCount","calculationCountMessage","calculationCountValue2Message","calculationCountSugar","calculationCountValueFraction","calculationCountValue2","calculationGramFraction","calculationGram","calculationGramSugar","calculationGramMessage","alert","calculateValue","err","console","log","list","defaultValue","onChange","onClick","onFocus","id","map","name","htmlFor","min","max","step","numberFormat","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","fractionCalculation","variable","toFraction","Number","NEGLIGIBLE_NUMBER","stringResult","stringAlert","__importDefault","this","mod","__esModule","Object","defineProperty","exports","numberLookupMap_1","require","closest","difference","keys","default","forEach","key","decimal","parseFloat","newDifference","Math","abs","vulgar","fraction","toDecimal","toFraction_1","enumerable","get","toDecimal_1","undefined","_a","int","getClosestLookupNumber_1","_b","toString","decimalPortion","floor","toFixed","numberPortion","trunc","concat"],"sourceRoot":""}