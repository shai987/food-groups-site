{"version":3,"file":"static/js/425.ec03d525.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Grains&Bakery/variance.js","components/Grains&Bakery/Variance.jsx","components/variables.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const variance = [\r\n  {\r\n    details: {\r\n      productName: 'קורנפלקס',\r\n      value: 0.5,\r\n      gram: 20,\r\n      fat: 0,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: '',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(כוס)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: false,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'ברנפלקס',\r\n      value: 0.5,\r\n      gram: 25,\r\n      fat: 0,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: '',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(כוס)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: false,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'גרנולה',\r\n      value: 3,\r\n      gram: 30,\r\n      fat: 1,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: ' יש להוסיף מנות שומן *',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(כף)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: true,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פצפוצי אורז',\r\n      value: 0.5,\r\n      gram: 30,\r\n      fat: 0,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: '',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(כוס)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: false,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'בייגלה - מקלות',\r\n      value: 20,\r\n      gram: 20,\r\n      fat: 0,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: '',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(יחידה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: false,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פופקורן מוכן ללא שמן',\r\n      value: 3,\r\n      gram: 30,\r\n      fat: 0,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: '',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(כוס)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: false,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'פופקורן מותפח בשמן',\r\n      value: 3,\r\n      gram: 30,\r\n      fat: 1,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: ' יש להוסיף מנות שומן *',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(כוס)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: true,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'ופלים/עוגיות',\r\n      value: 2,\r\n      gram: 20,\r\n      fat: 1,\r\n      sugar: 1,\r\n    },\r\n    fat: {\r\n      fatString: ' יש להוסיף מנות שומן *',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 2,\r\n      sugarCalculationGram: 20,\r\n      sugarString: ' יש להוסיף מנות סוכר *',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(יחידה-קטנה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: true,\r\n      sugar: true,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'עוגה יבשה',\r\n      value: 1,\r\n      gram: 50,\r\n      fat: 1,\r\n      sugar: 2,\r\n    },\r\n    fat: {\r\n      fatString: ' יש להוסיף מנות שומן *',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0.5,\r\n      sugarCalculationGram: 25,\r\n      sugarString: ' יש להוסיף מנות סוכר *',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(פרוסה קטנה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: true,\r\n      sugar: true,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'קרקרים קטנים',\r\n      value: 4,\r\n      gram: 0,\r\n      fat: 1,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: ' יש להוסיף מנות שומן *',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '',\r\n      measureString: '(יחידה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n      fat: true,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'קרקרים גדולים',\r\n      value: 2,\r\n      gram: 0,\r\n      fat: 1,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: ' יש להוסיף מנות שומן *',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '',\r\n      measureString: '(יחידה)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: false,\r\n      fat: true,\r\n      sugar: false,\r\n    },\r\n  },\r\n  {\r\n    details: {\r\n      productName: 'שקדי מרק',\r\n      value: 3,\r\n      gram: 25,\r\n      fat: 1,\r\n      sugar: 0,\r\n    },\r\n    fat: {\r\n      fatString: ' יש להוסיף מנות שומן *',\r\n    },\r\n    sugar: {\r\n      sugarCalculation: 0,\r\n      sugarCalculationGram: 0,\r\n      sugarString: '',\r\n    },\r\n    unit: {\r\n      gramString: '(גרם)',\r\n      measureString: '(כף)',\r\n    },\r\n    check: {\r\n      count: true,\r\n      gram: true,\r\n      fat: true,\r\n      sugar: false,\r\n    },\r\n  },\r\n];\r\nexport default variance;\r\n","// import react state\r\nimport { useState, useEffect } from 'react';\r\n// import from react-select\r\nimport Select from 'react-select';\r\n// import service \r\nimport variance from '../../services/Grains&Bakery/variance';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst Variance = () => {\r\n        //  array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(variance);\r\n        const [productName, setProductName] = useState(variance[0]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n        const [flag, setFlag] = useState(false);\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n\r\n        useEffect(() => {\r\n                // Add event listener on mount\r\n                window.addEventListener('resize', handleResize);\r\n\r\n                // Clean up the event listener on unmount\r\n                return () => {\r\n                        window.removeEventListener('resize', handleResize);\r\n                };\r\n        }, []);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate sugar \r\n                const sugar = (amount / product?.sugar?.sugarCalculation).toLocaleString(variables?.numberFormat);\r\n                // Calculate sugarGram \r\n                const sugarGram = (amount / product?.sugar?.sugarCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate fatString0 \r\n                const fatSugarString0 = `${product?.fat?.fatString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate fatString1 \r\n                const fatSugarString1 = product?.fat?.fatString.split(\" יש להוסיף \")[1];\r\n                // Calculate sugarString0 \r\n                const sugarString0 = `${product?.sugar?.sugarString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate sugarString1 \r\n                const sugarString1 = product?.sugar?.sugarString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count fat reasult using toFraction \r\n                // const calculationCountFat = ` ${variables?.fractionCalculation(count)}`;\r\n                const calculationCountFat = ` ${variables?.fractionCalculation(count)}\\n ${fatSugarString0} ${variables?.fractionCalculation(count)} ${fatSugarString1}`;\r\n                // Calculate count fat sugar reasult using toFraction  \r\n                // const calculationCountFatSugar = ` ${variables?.fractionCalculation(count)}\\n ${variables?.fractionCalculation(sugar)}\\n ${variables?.fractionCalculation(sugar)}`;\r\n                const calculationCountFatSugar = ` ${variables?.fractionCalculation(count)}\\n ${fatSugarString0} ${variables?.fractionCalculation(count)} ${fatSugarString1}\\n ${sugarString0} ${variables?.fractionCalculation(sugar)} ${sugarString1}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction \r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram fat reasult using toFraction \r\n                // const calculationGramFat = ` ${variables?.fractionCalculation(gram)}`;\r\n                const calculationGramFat = ` ${variables?.fractionCalculation(gram)}\\n ${fatSugarString0} ${variables?.fractionCalculation(gram)} ${fatSugarString1}`;\r\n                // Calculate gram fat sugar reasult using toFraction \r\n                // const calculationGramFatSugar = ` ${variables?.fractionCalculation(gram)}\\n ${variables?.fractionCalculation(sugarGram)}`;\r\n                const calculationGramFatSugar = ` ${variables?.fractionCalculation(gram)}\\n ${fatSugarString0} ${variables?.fractionCalculation(gram)} ${fatSugarString1}\\n ${sugarString0} ${variables?.fractionCalculation(sugarGram)} ${sugarString1}`;\r\n\r\n                if (product && type) {\r\n                        if (product?.check?.gram && product?.check?.fat && product?.check?.count && product?.check?.sugar) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFatSugar\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFatSugar\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.fat && product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[1] ? ` לא ניתן לבצע חישוב לפי גרמים לערך ${productName} `\r\n                                        : calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFat\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert(variables.stringAlert);\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleProductPC = (selectedOption) => {\r\n                setProductName(selectedOption.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        const handleProductTypePC = (selectedOption) => {\r\n                setProductType(selectedOption.value);\r\n        };\r\n\r\n        const handleResize = () => {\r\n                setViewportWidth(window.innerWidth);\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType));\r\n                        setFlag(true);\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult(variables.stringResult);\r\n                }\r\n        };\r\n\r\n        const productsOptions = products.map((product) => {\r\n                const shouldShowOption = (product?.check?.gram && productType === types[1])\r\n                        || productType === types[0];\r\n\r\n                return shouldShowOption ? (\r\n                        {\r\n                                value: product?.details?.productName,\r\n                                label: productType === types[0]\r\n                                        ? `${product?.details?.productName} ${product?.unit?.measureString}`\r\n                                        : `${product?.details?.productName} ${product?.unit?.gramString}`\r\n                        }\r\n                ) : null;\r\n        });\r\n\r\n        const filteredProductsOptions = productsOptions.filter(option => option !== null);\r\n\r\n        const typesOptions = types.map((type) => ({\r\n                value: type,\r\n                label: type\r\n        }));\r\n\r\n        console.log([...result].reverse().join(' '))\r\n        console.log([...result])\r\n\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <h1>שונות</h1>\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                {viewportWidth <= 600 ? (\r\n                                                        <select\r\n                                                                name='productType'\r\n                                                                value={productType}\r\n                                                                onChange={handleProductType}\r\n                                                        >\r\n                                                                {\r\n                                                                        types.map((type) => (\r\n                                                                                <option key={type} name=\"productType\" value={type}>\r\n                                                                                        {type}\r\n                                                                                </option>\r\n                                                                        ))\r\n                                                                }\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <Select\r\n                                                                options={typesOptions}\r\n                                                                isSearchable\r\n                                                                value={typesOptions.find((option) => option.value === productType)}\r\n                                                                onChange={handleProductTypePC}\r\n                                                        />\r\n                                                )}\r\n                                        </label>\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <label>\r\n                                                סוג הדגנים/מוצרי המאפה:\r\n                                                {viewportWidth <= 600 ? (\r\n                                                        <select\r\n                                                                value={productName}\r\n                                                                onChange={handleProduct}\r\n                                                        >\r\n                                                                {products.map((product) => {\r\n                                                                        const shouldShowOption = (product?.check?.gram && productType === types[1])\r\n                                                                                || productType === types[0];\r\n                                                                        return shouldShowOption ? (\r\n                                                                                <option\r\n                                                                                        key={product?.details?.productName}\r\n                                                                                        value={product?.details?.productName}\r\n                                                                                >\r\n                                                                                        {\r\n                                                                                                productType === types[0]\r\n                                                                                                        ? `${product?.details?.productName} ${product?.unit?.measureString}`\r\n                                                                                                        : `${product?.details?.productName} ${product?.unit?.gramString}`\r\n                                                                                        }\r\n                                                                                </option>\r\n                                                                        ) : null;\r\n                                                                })}\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <Select\r\n                                                                styles={{\r\n                                                                        menu: (provided, state) => ({\r\n                                                                                ...provided,\r\n                                                                                maxHeight: state?.selectProps?.options?.length <= 5 ? 'none' : '200px',\r\n                                                                                overflowY: 'auto',\r\n                                                                        }),\r\n                                                                }}\r\n                                                                options={filteredProductsOptions}\r\n                                                                isSearchable\r\n                                                                value={filteredProductsOptions.find((option) => option.value === productName)}\r\n                                                                onChange={handleProductPC}\r\n                                                        />\r\n                                                )}\r\n                                        </label>\r\n                                        <div className='div-result div-result-pc'>\r\n                                                {flag === true && 'מספר מנות:'}\r\n                                                <div className='result'>{result}</div>\r\n                                        </div>\r\n                                        {/* ---------------------------------------------------- */}\r\n                                        {/* try */}\r\n                                        {/* <div className='div-result div-result-pc'>\r\n                                                <div className='result' style={{ direction: 'ltr' }}>\r\n                                                        {result} :מספר מנות\r\n                                                </div>\r\n                                                {product?.check?.fat && <div div className='amount-result' style={{ direction: 'ltr' }}>\r\n                                                        יש להוסיף {[...result].reverse().join(' ')} מנות שומן *\r\n                                                </div>}\r\n                                                {product?.check?.sugar && <div className='amount-result' style={{ direction: 'ltr' }}>\r\n                                                        יש להוסיף {result.split(' ')} מנות סוכר *\r\n                                                </div>}\r\n                                        </div> */}\r\n\r\n                                        {/* ---------------------------------------------------- */}\r\n                                        {/* <div className='div-result div-result-pc'>\r\n                                                <div className='amount-result'>מספר מנות:</div>\r\n                                                <div className='result' style={{ direction: 'ltr' }}>\r\n                                                        {result}\r\n                                                </div>\r\n                                        </div>\r\n                                        <div className='div-result div-result-pc'>\r\n                                                <div className='amount-result'>\r\n                                                        מספר מנות: <span className='result' style={{ direction: 'ltr' }}>{result}</span>\r\n                                                </div>\r\n                                        </div>\r\n                                        <div className='div-result div-result-pc'>\r\n                                                <div className='amount-result'>\r\n                                                        <span>מספר מנות: </span>\r\n                                                        <span className='result' style={{ direction: 'ltr' }}>{result}</span>\r\n                                                </div>\r\n                                        </div>\r\n\r\n                                        <div className='div-result div-result-pc'>\r\n                                                <div className='result' style={{ direction: 'rtl' }}>\r\n                                                        {`מספר מנות:${result}`}\r\n                                                </div>\r\n                                        </div>\r\n\r\n                                        <div className='div-result div-result-pc'>\r\n                                                {(!product?.check?.fat && !product?.check?.sugar) && <div className='result' style={{ direction: 'ltr' }}>\r\n                                                        {result} :מספר מנות\r\n                                                </div>}\r\n                                        </div> */}\r\n                                        {/* \r\n                                        <div className='div-result div-result-pc' style={{ direction: 'ltr' }}>\r\n                                                <p className='result' style={{ direction: 'ltr' }}>{`מספר מנות:${result}`} </p>\r\n                                        </div> */}\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default Variance;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // Use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // Use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n"],"names":["props","className","children","details","productName","value","gram","fat","sugar","fatString","sugarCalculation","sugarCalculationGram","sugarString","unit","gramString","measureString","check","count","types","useState","variance","products","setProductName","productType","setProductType","window","innerWidth","viewportWidth","setViewportWidth","productAmount","setProductAmount","result","setResult","flag","setFlag","product","find","type","useEffect","addEventListener","handleResize","removeEventListener","productsOptions","map","label","filteredProductsOptions","filter","option","typesOptions","console","log","reverse","join","FormFrame","onSubmit","e","preventDefault","amount","toLocaleString","variables","numberFormat","sugarGram","fatSugarString0","split","fatSugarString1","sugarString0","sugarString1","calculationCountFraction","calculationCount","fractionCalculation","calculationCountFat","calculationCountFatSugar","calculationGramFraction","calculationGram","calculationGramFat","calculationGramFatSugar","NEGLIGIBLE_NUMBER","alert","stringAlert","calculateValue","err","message","stringResult","name","onChange","event","target","options","isSearchable","selectedOption","htmlFor","id","min","max","step","styles","menu","provided","state","maxHeight","selectProps","length","overflowY","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number"],"sourceRoot":""}