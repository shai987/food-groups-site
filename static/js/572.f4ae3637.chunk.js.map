{"version":3,"file":"static/js/572.f4ae3637.chunk.js","mappings":"sKAcA,EAZkB,SAACA,GACX,OACQ,+BACQ,gBAAKC,UAAU,uBAAsB,UAC7B,gBAAKA,UAAU,aAAY,SAClBD,EAAME,cAK/C,C,4FC0LA,EAtMe,CACP,CACQC,QAAS,CACDC,YAAa,iGACbC,MAAO,EACPC,KAAM,IAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,oCAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,6EACbC,MAAO,EACPO,QAAS,mCACTN,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,oCAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,sEACbC,MAAO,GACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,gDAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,4EACbC,MAAO,IACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,gDAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,oDACbC,MAAO,GACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,wBAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,wCACbC,MAAO,EACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,wBAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,kCACbC,MAAO,EACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,wBAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,0DACbC,MAAO,OACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,8BAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,0DACbC,MAAO,IACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,8BAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,8CACbC,MAAO,EACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,8BAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,sEACbC,MAAO,EACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,0CAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,0DACbC,MAAO,EACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,oCAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,IAGtB,CACQH,QAAS,CACDC,YAAa,gEACbC,MAAO,IACPC,KAAM,GAEdC,KAAM,CACEC,WAAY,uBACZC,cAAe,0CAEvBC,MAAO,CACCC,OAAO,EACPL,MAAM,K,uCChC9B,EAvJe,WAEP,IAAMO,EAAQ,CAAC,2BAAQ,sBAGvB,GAAmBC,EAAAA,EAAAA,UAASC,GAArBC,GAA4B,YAApB,GACf,GAAsCF,EAAAA,EAAAA,UAASC,EAAAA,GAAAA,QAAAA,aAAoC,eAA5EX,EAAW,KAAEa,EAAc,KAClC,GAAsCH,EAAAA,EAAAA,UAASD,EAAM,IAAG,eAAjDK,EAAW,KAAEC,EAAc,KAClC,GAA0CL,EAAAA,EAAAA,UAAS,GAAE,eAA9CM,EAAa,KAAEC,EAAgB,KACtC,GAA4BP,EAAAA,EAAAA,UAAS,IAAG,eAAjCQ,EAAM,KAAEC,EAAS,KAGlBC,EAAUR,EAASS,MAAK,SAAAD,GAAO,aAAW,OAAPA,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASrB,eAAO,WAAT,EAAP,EAAkBC,eAAgBA,CAAW,IAEhFsB,EAAOb,EAAMY,MAAK,SAAAC,GAAI,OAAIA,IAASR,CAAW,IAiD9CS,EAAc,SAACC,GACbA,EAAMC,OAAOxB,MAAQ,EAC7B,EAcA,OACQ,+BACQ,SAACyB,EAAA,EAAS,WACF,kBAAMC,SAfT,SAACC,GAEdA,EAAEC,iBACF,IACQV,EAtDO,SAACnB,EAAa8B,EAAQhB,GAAiB,IAAD,IAgBhC,EAdfP,GAASuB,GAAgB,OAAPV,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASrB,eAAO,WAAT,EAAP,EAAkBE,QAAO8B,eAAwB,OAATC,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAAA,cAE1D9B,GAAQ4B,GAAgB,OAAPV,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASrB,eAAO,WAAT,EAAP,EAAkBG,OAAM6B,eAAwB,OAATC,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAAA,cAGxDC,EAAwB,WAAO1B,GAE/B2B,EAAgB,WAAgB,OAATF,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAAA,oBAA+BzB,IAGtD4B,EAAuB,WAAOjC,GAE9BkC,EAAe,WAAgB,OAATJ,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAAA,oBAA+B9B,IAE3D,OAAIkB,GAAWE,EACI,OAAPF,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASd,aAAK,OAAd,EAAgBJ,KACLY,IAAgBL,EAAM,IAAMwB,IAAqC,OAATD,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAAA,mBAA+BE,EACpFpB,IAAgBL,EAAM,IAAM0B,IAAoC,OAATH,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAAA,mBAA+BI,EAC9E,2BAGXtB,IAAgBL,EAAM,GAAE,oLAAyCT,EAAW,KACzEiC,IAAqC,OAATD,EAAAA,QAAS,IAATA,EAAAA,OAAS,EAATA,EAAAA,EAAAA,mBAA+BE,EACnD,2BAInBG,MAAM,4GAE7B,CAuB0BC,CAAetC,EAAagB,EAAeF,GAK7D,CAHA,MAAOyB,GACCC,QAAQC,IAAIF,EAAIG,SAChBvB,EAAU,gPAClB,CACR,EAKqD,WACrB,wBAAI,oCACJ,6BAAO,2HAEC,kBAAOwB,KAAK,cACJC,aAAc9B,EACd+B,SA9BtB,SAACrB,GACnBT,EAAeS,EAAMC,OAAOxB,MACpC,EA6BgD6C,QAASvB,EACTwB,QAASxB,KAEjB,qBAAUyB,GAAG,cAAa,SAEVvC,EAAMwC,KAAI,SAAC3B,GAAI,OACP,mBAAmB4B,KAAK,cAAcjD,MAAOqB,EAAK,SACzCA,GADIA,EAEJ,UAKzC,mBACA,mBAAO6B,QAAQ,gBAAe,UAAC,4DAEvB,kBACQD,KAAK,gBACL5B,KAAK,SACL0B,GAAG,gBACHI,IAAI,IACJC,IAAI,OACJC,KAAK,MACLrD,MAAOe,EACP6B,SA3D3B,SAACrB,GACdP,EAAiBO,EAAMC,OAAOxB,MACtC,QA4DgC,mBACA,6BAAO,gDAEC,kBAAO0C,KAAK,cACJC,aAAc5C,EACd6C,SAvE1B,SAACrB,GACfX,EAAeW,EAAMC,OAAOxB,MACpC,EAsEgD6C,QAASvB,EACTwB,QAASxB,KAEjB,qBAAUyB,GAAG,cAAa,SAEVpC,EAASqC,KAAI,SAAC7B,GAAO,uBACb,mBAEQ8B,KAAK,cACLjD,MAAc,OAAPmB,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASd,aAAK,OAAd,EAAgBJ,MAAQY,IAAgBL,EAAM,GAAY,OAAPW,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASrB,eAAO,WAAT,EAAP,EAAkBC,YAClEc,IAAgBL,EAAM,GAAY,OAAPW,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASrB,eAAO,WAAT,EAAP,EAAkBC,YACrC,GAAG,SACpBc,IAAgBL,EAAM,GAAY,OAAPW,QAAO,IAAPA,GAAa,QAAN,EAAPA,EAASjB,YAAI,WAAN,EAAP,EAAeE,cAAuB,OAAPe,QAAO,IAAPA,GAAa,QAAN,EAAPA,EAASjB,YAAI,WAAN,EAAP,EAAeC,YAL9D,OAAPgB,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASrB,eAAO,WAAT,EAAP,EAAkBC,YAMtB,UAKzC,mBAAM,mBACN,iBAAKH,UAAU,OAAM,UAAC,sDAEd,cAAGA,UAAU,SAAQ,SAAEqB,QAE/B,mBAAQI,KAAK,SAAQ,SAAC,6BAK9D,C,qEC9JaU,EAAY,CAEjBuB,aAAc,CAAEC,sBAAuB,EAAGC,sBAAuB,GAEjEC,eAAgB,CAAEC,kBAAkB,GACpCC,oBAAqB,SAACC,GAAQ,OAAKC,EAAAA,EAAAA,YAAWC,OAAOF,IAAa,EAAG7B,EAAU0B,eAAe,EAC9FM,kBAAmB,IACnBC,aAAc,gPACdC,YAAa,4G,uBCVrB,IAAIC,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAE,OAAOC,eAAeC,EAAS,aAAc,CAAExE,OAAO,IACtD,IAAIyE,EAAoBP,EAAgBQ,EAAQ,OAehDF,EAAAA,QAb6B,SAAUxE,GACnC,IAAI2E,EAAU,EACVC,EAAa,EASjB,OARAN,OAAOO,KAAKJ,EAAkBK,SAASC,SAAQ,SAAUC,GACrD,IAAIC,EAAUC,WAAWF,GACrBG,EAAgBC,KAAKC,IAAIrF,EAAQiF,GACjCE,EAAgBP,IAChBA,EAAaO,EACbR,EAAUM,EAElB,IACON,CACX,C,qBClBAL,OAAOC,eAAeC,EAAS,aAAc,CAAExE,OAAO,IA2EtDwE,EAAAA,QA1EsB,CAClB,GAAK,CACDc,OAAQ,SACRC,SAAU,QAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,OACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,SACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,OACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,OACRC,SAAU,OAEd,GAAK,CACDD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,OAEd,IAAM,CACFD,OAAQ,SACRC,SAAU,O,uBCxElB,IAAIrB,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAE,OAAOC,eAAeC,EAAS,aAAc,CAAExE,OAAO,IACtDwE,EAAQgB,UAAYhB,EAAQX,gBAAa,EACzC,IAAI4B,EAAef,EAAQ,MAC3BJ,OAAOC,eAAeC,EAAS,aAAc,CAAEkB,YAAY,EAAMC,IAAK,WAAc,OAAOzB,EAAgBuB,GAAcX,OAAS,IAClI,IAAIc,EAAclB,EAAQ,MAC1BJ,OAAOC,eAAeC,EAAS,YAAa,CAAEkB,YAAY,EAAMC,IAAK,WAAc,OAAOzB,EAAgB0B,GAAad,OAAS,G,uBCRhI,IAAIZ,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAE,OAAOC,eAAeC,EAAS,aAAc,CAAExE,OAAO,IACtD,IAAIyE,EAAoBP,EAAgBQ,EAAQ,OAgBhDF,EAAAA,QAdgB,SAAUxE,GACtB,GAAqB,kBAAVA,EACP,OAAOA,EAEX,GAAc,KAAVA,QAA0B6F,IAAV7F,GAAiC,OAAVA,EACvC,OAAO,EAEX,IAAI8F,EAAK9F,EAAM+F,MAAM,KAAMC,EAAMF,EAAG,GAAIP,EAAWO,EAAG,GACtD,QAAiBD,IAAbN,GAAuC,KAAbA,EAC1B,OAAOL,WAAWc,GAEtB,IAAIf,EAAUX,OAAOO,KAAKJ,EAAkBK,SAAS1D,MAAK,SAAU4D,GAAO,OAAOP,EAAkBK,QAAQE,GAAKM,SAAWC,GAAYd,EAAkBK,QAAQE,GAAKO,WAAaA,CAAU,KAAMA,EACpM,OAAOL,WAAWc,GAAOd,WAAWD,EACxC,C,uBCnBA,IAAIf,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAE,OAAOC,eAAeC,EAAS,aAAc,CAAExE,OAAO,IACtD,IAAIyE,EAAoBP,EAAgBQ,EAAQ,OAC5CuB,EAA2B/B,EAAgBQ,EAAQ,OAiBvDF,EAAAA,QAfiB,SAAUS,EAASa,GAChC,IAAII,EAAKJ,EAAGpC,iBAAkBA,OAA0B,IAAPwC,GAAuBA,EAExE,GAAIjB,EAAU,IAAM,EAChB,OAAOA,EAAQkB,WAEnB,IAAIC,GAAkBnB,EAAUG,KAAKiB,MAAMpB,IAAUqB,QAAQ,GACzDC,EAAgBnB,KAAKoB,MAAMvB,GAG/B,OAFAsB,EAAkC,IAAlBA,EAAsB,GAAK,GAAGE,OAAOF,EAAe,KAEhE7C,EACO,GAAG+C,OAAOF,GAAeE,OAAOhC,EAAkBK,SAAQ,EAAImB,EAAyBnB,SAASsB,IAAiBd,QAErH,GAAGmB,OAAOF,GAAeE,OAAOhC,EAAkBK,SAAQ,EAAImB,EAAyBnB,SAASsB,IAAiBb,SAC5H,C","sources":["components/FormFrame.jsx","services/Grains&Bakery/breads.js","components/Grains&Bakery/Breads.jsx","components/variables.js","../node_modules/fraction-parser/lib/helpers/getClosestLookupNumber.js","../node_modules/fraction-parser/lib/helpers/numberLookupMap.js","../node_modules/fraction-parser/lib/index.js","../node_modules/fraction-parser/lib/toDecimal.js","../node_modules/fraction-parser/lib/toFraction.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const breads = [\r\n        {\r\n                details: {\r\n                        productName: 'לחם לבן/שחור/חלה/חי',\r\n                        value: 1,\r\n                        gram: 30,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פרוסה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'לחם דל קלוריות',\r\n                        value: 2,\r\n                        measure: '(פרוסה)',\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פרוסה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'לחמנייה קטנה',\r\n                        value: 0.5,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(לחמנייה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'לחמנייה גדולה',\r\n                        value: 0.25,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(לחמנייה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'מצה רגילה',\r\n                        value: 0.5,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(מצה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'מצה קלה',\r\n                        value: 1,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(מצה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פת מצה',\r\n                        value: 2,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(מצה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פיתה רגילה',\r\n                        value: 0.33333,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פיתה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פיתה גדולה',\r\n                        value: 0.25,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פיתה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פיתה ביס',\r\n                        value: 1,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פיתה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פריכיות אורז',\r\n                        value: 3,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פריכית)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פתית/לחמית',\r\n                        value: 2,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(לחמית)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בייגלה עגול',\r\n                        value: 0.25,\r\n                        gram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(בייגלה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n];\r\nexport default breads;  ","// import react state\r\nimport { useState } from 'react';\r\n// import service \r\nimport breads from '../../services/Grains&Bakery/breads';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst Breads = () => {\r\n        // array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(breads);\r\n        const [productName, setProductName] = useState(breads[0]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction \r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n\r\n                if (product && type) {\r\n                        if (product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[1] ? ` לא ניתן לבצע חישוב לפי גרמים לערך ${productName} `\r\n                                        : calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert('הערך שהוזן אינו קיים');\r\n                }\r\n        }\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        // Clean input field when click it \r\n        const handleClear = (event) => {\r\n                event.target.value = \"\";\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType));\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult('קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר');\r\n                }\r\n        };\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <h1>לחמים</h1>\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                <input list=\"productType\"\r\n                                                        defaultValue={productType}\r\n                                                        onChange={handleProductType}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productType\">\r\n                                                        {\r\n                                                                types.map((type) => (\r\n                                                                        <option key={type} name=\"productType\" value={type}>\r\n                                                                                {type}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br />\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <br />\r\n                                        <label>\r\n                                                סוג הלחם:\r\n                                                <input list=\"productName\"\r\n                                                        defaultValue={productName}\r\n                                                        onChange={handleProduct}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productName\">\r\n                                                        {\r\n                                                                products.map((product) => (\r\n                                                                        <option\r\n                                                                                key={product?.details?.productName}\r\n                                                                                name=\"productName\"\r\n                                                                                value={product?.check?.gram && productType === types[1] ? product?.details?.productName\r\n                                                                                        : productType === types[0] ? product?.details?.productName\r\n                                                                                                : ''}>\r\n                                                                                {productType === types[0] ? product?.unit?.measureString : product?.unit?.gramString}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <div className='div1'>\r\n                                                מספר מנות:\r\n                                                <p className='result'>{result}</p>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame>\r\n                </>\r\n        );\r\n}\r\nexport default Breads;","// Library that parse decimals into fractions  \r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n        // use for toLocaleString\r\n        numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n        // use for toFraction\r\n        fractionFormat: { useUnicodeVulgar: true },\r\n        fractionCalculation: (variable) => toFraction(Number(variable) || 0, variables.fractionFormat),\r\n        NEGLIGIBLE_NUMBER: 0.25,\r\n        stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n        stringAlert: 'הערך שהוזן אינו קיים',\r\n\r\n};","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./numberLookupMap\"));\n// get the closest vulgar fraction from a decimal\nvar getClosestLookupNumber = function (value) {\n    var closest = 0;\n    var difference = 1;\n    Object.keys(numberLookupMap_1.default).forEach(function (key) {\n        var decimal = parseFloat(key);\n        var newDifference = Math.abs(value - decimal);\n        if (newDifference < difference) {\n            difference = newDifference;\n            closest = decimal;\n        }\n    });\n    return closest;\n};\nexports.default = getClosestLookupNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap = {\n    0.1: {\n        vulgar: '⅒',\n        fraction: '1/10',\n    },\n    0.11: {\n        vulgar: '⅑',\n        fraction: '1/9',\n    },\n    0.12: {\n        vulgar: '⅛',\n        fraction: '1/8',\n    },\n    0.14: {\n        vulgar: '⅐',\n        fraction: '1/7',\n    },\n    0.16: {\n        vulgar: '⅙',\n        fraction: '1/6',\n    },\n    0.2: {\n        vulgar: '⅕',\n        fraction: '1/5',\n    },\n    0.25: {\n        vulgar: '¼',\n        fraction: '1/4',\n    },\n    0.33: {\n        vulgar: '⅓',\n        fraction: '1/3',\n    },\n    0.37: {\n        vulgar: '⅜',\n        fraction: '3/8',\n    },\n    0.4: {\n        vulgar: '⅖',\n        fraction: '2/5',\n    },\n    0.5: {\n        vulgar: '½',\n        fraction: '1/2',\n    },\n    0.6: {\n        vulgar: '⅗',\n        fraction: '3/5',\n    },\n    0.62: {\n        vulgar: '⅝',\n        fraction: '5/8',\n    },\n    0.66: {\n        vulgar: '⅔',\n        fraction: '2/3',\n    },\n    0.75: {\n        vulgar: '¾',\n        fraction: '3/4',\n    },\n    0.8: {\n        vulgar: '⅘',\n        fraction: '4/5',\n    },\n    0.83: {\n        vulgar: '⅚',\n        fraction: '5/6',\n    },\n    0.87: {\n        vulgar: '⅞',\n        fraction: '7/8',\n    },\n};\nexports.default = numberLookupMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDecimal = exports.toFraction = void 0;\nvar toFraction_1 = require(\"./toFraction\");\nObject.defineProperty(exports, \"toFraction\", { enumerable: true, get: function () { return __importDefault(toFraction_1).default; } });\nvar toDecimal_1 = require(\"./toDecimal\");\nObject.defineProperty(exports, \"toDecimal\", { enumerable: true, get: function () { return __importDefault(toDecimal_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\n// function that takes a unicode vulgar or a fraction and returns a decimal\nvar toDecimal = function (value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (value === '' || value === undefined || value === null) {\n        return 0;\n    }\n    var _a = value.split(' '), int = _a[0], fraction = _a[1];\n    if (fraction === undefined || fraction === '') {\n        return parseFloat(int);\n    }\n    var decimal = Object.keys(numberLookupMap_1.default).find(function (key) { return numberLookupMap_1.default[key].vulgar === fraction || numberLookupMap_1.default[key].fraction === fraction; }) || fraction;\n    return parseFloat(int) + parseFloat(decimal);\n};\nexports.default = toDecimal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\nvar getClosestLookupNumber_1 = __importDefault(require(\"./helpers/getClosestLookupNumber\"));\n// functions that returns a string representation of a fraction from a number\nvar toFraction = function (decimal, _a) {\n    var _b = _a.useUnicodeVulgar, useUnicodeVulgar = _b === void 0 ? true : _b;\n    // if the number is a whole number, return it as a string\n    if (decimal % 1 === 0) {\n        return decimal.toString();\n    }\n    var decimalPortion = (decimal - Math.floor(decimal)).toFixed(2);\n    var numberPortion = Math.trunc(decimal);\n    numberPortion = numberPortion === 0 ? '' : \"\".concat(numberPortion, \" \");\n    // if the number is a decimal, return it as a fraction\n    if (useUnicodeVulgar) {\n        return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].vulgar);\n    }\n    return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].fraction);\n};\nexports.default = toFraction;\n"],"names":["props","className","children","details","productName","value","gram","unit","gramString","measureString","check","count","measure","types","useState","breads","products","setProductName","productType","setProductType","productAmount","setProductAmount","result","setResult","product","find","type","handleClear","event","target","FormFrame","onSubmit","e","preventDefault","amount","toLocaleString","variables","calculationCountFraction","calculationCount","calculationGramFraction","calculationGram","alert","calculateValue","err","console","log","message","list","defaultValue","onChange","onClick","onFocus","id","map","name","htmlFor","min","max","step","numberFormat","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","fractionCalculation","variable","toFraction","Number","NEGLIGIBLE_NUMBER","stringResult","stringAlert","__importDefault","this","mod","__esModule","Object","defineProperty","exports","numberLookupMap_1","require","closest","difference","keys","default","forEach","key","decimal","parseFloat","newDifference","Math","abs","vulgar","fraction","toDecimal","toFraction_1","enumerable","get","toDecimal_1","undefined","_a","split","int","getClosestLookupNumber_1","_b","toString","decimalPortion","floor","toFixed","numberPortion","trunc","concat"],"sourceRoot":""}