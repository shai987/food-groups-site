{"version":3,"file":"static/js/963.f0572424.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Legumes&Amylum/cookedFoods.js","components/Legumes&Amylum/CookedFoodsPA.jsx","components/variables.js","../node_modules/fraction-parser/lib/helpers/getClosestLookupNumber.js","../node_modules/fraction-parser/lib/helpers/numberLookupMap.js","../node_modules/fraction-parser/lib/index.js","../node_modules/fraction-parser/lib/toDecimal.js","../node_modules/fraction-parser/lib/toFraction.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const cookedFoods = [\r\n        {\r\n                details: {\r\n                        productName: 'שעועית לבנה',\r\n                        value: 0.5,\r\n                        gram: 60,\r\n                        fat: 0,\r\n                },\r\n                fat: {\r\n                        fatString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(כוס)',\r\n                },\r\n                check: {\r\n                        fat: false,\r\n                        gram: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'אפונה ירוקה',\r\n                        value: 0.5,\r\n                        gram: 90,\r\n                        fat: 0,\r\n                },\r\n                fat: {\r\n                        fatString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(כוס)',\r\n                },\r\n                check: {\r\n                        fat: false,\r\n                        gram: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'עדשים',\r\n                        value: 0.5,\r\n                        gram: 70,\r\n                        fat: 0,\r\n                },\r\n                fat: {\r\n                        fatString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(כוס)',\r\n                },\r\n                check: {\r\n                        fat: false,\r\n                        gram: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פול',\r\n                        value: 0.5,\r\n                        gram: 80,\r\n                        fat: 0,\r\n                },\r\n                fat: {\r\n                        fatString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(כוס)',\r\n                },\r\n                check: {\r\n                        fat: false,\r\n                        gram: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פולי סויה',\r\n                        value: 0.5,\r\n                        gram: 70,\r\n                        fat: 1,\r\n                },\r\n                fat: {\r\n                        fatString: ' יש להוסיף מנות שומן *',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(כוס)',\r\n                },\r\n                check: {\r\n                        fat: true,\r\n                        gram: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'חומוס גרגרים',\r\n                        value: 0.5,\r\n                        gram: 90,\r\n                        fat: 0,\r\n                },\r\n                fat: {\r\n                        fatString: '',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(כוס)',\r\n                },\r\n                check: {\r\n                        fat: false,\r\n                        gram: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'חומוס סלט',\r\n                        value: 3,\r\n                        gram: 0,\r\n                        fat: 1,\r\n                },\r\n                fat: {\r\n                        fatString: ' יש להוסיף מנות שומן *',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(כף)',\r\n                },\r\n                check: {\r\n                        fat: true,\r\n                        gram: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פלאפל',\r\n                        value: 3,\r\n                        gram: 40,\r\n                        fat: 1,\r\n                },\r\n                fat: {\r\n                        fatString: ' יש להוסיף מנות שומן *',\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(כדור)',\r\n                },\r\n                check: {\r\n                        fat: true,\r\n                        gram: true,\r\n                },\r\n        },\r\n];\r\nexport default cookedFoods;  ","// import react state\r\nimport { useState } from 'react';\r\n// import service \r\nimport cookedFoods from '../../services/Legumes&Amylum/cookedFoods';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst CookedFoodsPA = () => {\r\n        //  array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(cookedFoods);\r\n        const [productName, setProductName] = useState(cookedFoods[0]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n\r\n        // My handlers\r\n        const calculateValue = (amount, productType) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate fatString0 \r\n                const fatString0 = `${product?.fat?.fatString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate fatString1 \r\n                const fatString1 = product?.fat?.fatString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count fat reasult using toFraction \r\n                const calculationCountFat = ` ${variables?.fractionCalculation(count)}\\n ${fatString0} ${variables?.fractionCalculation(count)} ${fatString1}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction \r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram fat reasult using toFraction \r\n                const calculationGramFat = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gram)} ${fatString1}`;\r\n\r\n                if (product && type) {\r\n                        if (product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[1] ? ` לא ניתן לבצע חישוב לפי גרמים לערך ${productName} `\r\n                                        : calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert('הערך שהוזן אינו קיים');\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        // Clean input field when click it \r\n        const handleClear = (event) => {\r\n                event.target.value = \"\";\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productAmount, productType));\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult('קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר');\r\n                }\r\n        };\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <h1>מזונות מבושלים (ללא שמן)</h1>\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                <input list=\"productType\"\r\n                                                        defaultValue={productType}\r\n                                                        onChange={handleProductType}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productType\">\r\n                                                        {\r\n                                                                types.map((type) => (\r\n                                                                        <option key={type} name=\"productType\" value={type}>\r\n                                                                                {type}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br />\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <br />\r\n                                        <label>\r\n                                                סוג המזון המבושל:\r\n                                                <input list=\"productName\"\r\n                                                        defaultValue={productName}\r\n                                                        onChange={handleProduct}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productName\">\r\n                                                        {\r\n                                                                products.map((product) => (\r\n                                                                        <option\r\n                                                                                key={product?.details?.productName}\r\n                                                                                name=\"productName\"\r\n                                                                                value={product?.check?.gram && productType === types[1] ? product?.details?.productName\r\n                                                                                        : productType === types[0] ? product?.details?.productName\r\n                                                                                                : ''}>\r\n                                                                                {productType === types[0] ? product?.unit?.measureString : product?.unit?.gramString}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <div className='div1'>\r\n                                                מספר מנות:\r\n                                                <p className='result'>{result}</p>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default CookedFoodsPA;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./numberLookupMap\"));\n// get the closest vulgar fraction from a decimal\nvar getClosestLookupNumber = function (value) {\n    var closest = 0;\n    var difference = 1;\n    Object.keys(numberLookupMap_1.default).forEach(function (key) {\n        var decimal = parseFloat(key);\n        var newDifference = Math.abs(value - decimal);\n        if (newDifference < difference) {\n            difference = newDifference;\n            closest = decimal;\n        }\n    });\n    return closest;\n};\nexports.default = getClosestLookupNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap = {\n    0.1: {\n        vulgar: '⅒',\n        fraction: '1/10',\n    },\n    0.11: {\n        vulgar: '⅑',\n        fraction: '1/9',\n    },\n    0.12: {\n        vulgar: '⅛',\n        fraction: '1/8',\n    },\n    0.14: {\n        vulgar: '⅐',\n        fraction: '1/7',\n    },\n    0.16: {\n        vulgar: '⅙',\n        fraction: '1/6',\n    },\n    0.2: {\n        vulgar: '⅕',\n        fraction: '1/5',\n    },\n    0.25: {\n        vulgar: '¼',\n        fraction: '1/4',\n    },\n    0.33: {\n        vulgar: '⅓',\n        fraction: '1/3',\n    },\n    0.37: {\n        vulgar: '⅜',\n        fraction: '3/8',\n    },\n    0.4: {\n        vulgar: '⅖',\n        fraction: '2/5',\n    },\n    0.5: {\n        vulgar: '½',\n        fraction: '1/2',\n    },\n    0.6: {\n        vulgar: '⅗',\n        fraction: '3/5',\n    },\n    0.62: {\n        vulgar: '⅝',\n        fraction: '5/8',\n    },\n    0.66: {\n        vulgar: '⅔',\n        fraction: '2/3',\n    },\n    0.75: {\n        vulgar: '¾',\n        fraction: '3/4',\n    },\n    0.8: {\n        vulgar: '⅘',\n        fraction: '4/5',\n    },\n    0.83: {\n        vulgar: '⅚',\n        fraction: '5/6',\n    },\n    0.87: {\n        vulgar: '⅞',\n        fraction: '7/8',\n    },\n};\nexports.default = numberLookupMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDecimal = exports.toFraction = void 0;\nvar toFraction_1 = require(\"./toFraction\");\nObject.defineProperty(exports, \"toFraction\", { enumerable: true, get: function () { return __importDefault(toFraction_1).default; } });\nvar toDecimal_1 = require(\"./toDecimal\");\nObject.defineProperty(exports, \"toDecimal\", { enumerable: true, get: function () { return __importDefault(toDecimal_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\n// function that takes a unicode vulgar or a fraction and returns a decimal\nvar toDecimal = function (value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (value === '' || value === undefined || value === null) {\n        return 0;\n    }\n    var _a = value.split(' '), int = _a[0], fraction = _a[1];\n    if (fraction === undefined || fraction === '') {\n        return parseFloat(int);\n    }\n    var decimal = Object.keys(numberLookupMap_1.default).find(function (key) { return numberLookupMap_1.default[key].vulgar === fraction || numberLookupMap_1.default[key].fraction === fraction; }) || fraction;\n    return parseFloat(int) + parseFloat(decimal);\n};\nexports.default = toDecimal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\nvar getClosestLookupNumber_1 = __importDefault(require(\"./helpers/getClosestLookupNumber\"));\n// functions that returns a string representation of a fraction from a number\nvar toFraction = function (decimal, _a) {\n    var _b = _a.useUnicodeVulgar, useUnicodeVulgar = _b === void 0 ? true : _b;\n    // if the number is a whole number, return it as a string\n    if (decimal % 1 === 0) {\n        return decimal.toString();\n    }\n    var decimalPortion = (decimal - Math.floor(decimal)).toFixed(2);\n    var numberPortion = Math.trunc(decimal);\n    numberPortion = numberPortion === 0 ? '' : \"\".concat(numberPortion, \" \");\n    // if the number is a decimal, return it as a fraction\n    if (useUnicodeVulgar) {\n        return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].vulgar);\n    }\n    return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].fraction);\n};\nexports.default = toFraction;\n"],"names":["props","_jsx","_Fragment","children","className","details","productName","value","gram","fat","fatString","unit","gramString","measureString","check","CookedFoodsPA","types","products","useState","cookedFoods","setProductName","productType","setProductType","productAmount","setProductAmount","result","setResult","product","find","_product$details","type","handleClear","event","target","FormFrame","_jsxs","onSubmit","e","preventDefault","calculateValue","amount","_product$details2","_product$details3","_product$fat","_product$fat2","count","toLocaleString","variables","numberFormat","fatString0","concat","split","fatString1","calculationCountFraction","calculationCount","fractionCalculation","calculationCountFat","calculationGramFraction","calculationGram","calculationGramFat","_product$check","_product$check2","_product$check3","NEGLIGIBLE_NUMBER","alert","err","console","log","message","list","defaultValue","onChange","onClick","onFocus","id","map","name","htmlFor","min","max","step","_product$details4","_product$check4","_product$details5","_product$details6","_product$unit","_product$unit2","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number","stringResult","stringAlert","__importDefault","this","mod","__esModule","Object","defineProperty","exports","numberLookupMap_1","require","closest","difference","keys","default","forEach","key","decimal","parseFloat","newDifference","Math","abs","vulgar","fraction","toDecimal","toFraction_1","enumerable","get","toDecimal_1","undefined","_a","int","getClosestLookupNumber_1","_b","toString","decimalPortion","floor","toFixed","numberPortion","trunc"],"sourceRoot":""}