{"version":3,"file":"static/js/16.3a91f844.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Meat&Substitutes/meats.js","components/Meat&Substitutes/Meat.jsx","components/variables.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const meats = [\r\n        {\r\n                details: {\r\n                        productName: 'איברים פנימיים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(טחול, כבד, לבבות, קורקבנים)',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר בקר',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר הודו ללא עור',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 1,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: ' יש להוריד מנת שומן *',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 90,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: true,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר הודו עם עור',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף ללא עור (עם עצם)',\r\n                        value: 0.25,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 1,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: ' יש להוריד מנת שומן *',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 150,\r\n                        portionFatCalculationCount: 0.25,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם, שקול עם עצם)',\r\n                        measureString: '(עוף קטן מספר 1)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: true,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף עם עור (עם עצם)',\r\n                        value: 0.25,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם, שקול עם עצם)',\r\n                        measureString: '(עוף קטן מספר 1)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דג מעושן/משומר בשמן/מלוח',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים משומרים במים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים רזים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: `.(מכיל עד 5 גר' שומן ב-100 גרם (מבושל *`,\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים רזים (עם עצמות)',\r\n                        value: 0,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: `.(מכיל עד 5 גר' שומן ב-100 גרם (מבושל *`,\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים שמנים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים שמנים (עם עצמות)',\r\n                        value: 0,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'כבש',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקניק',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקנקיות',\r\n                        value: 3,\r\n                        gram: 120,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פסטרמה',\r\n                        value: 6,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0.6,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פרוסה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'שניצל (עוף/הודו)',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0.5,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: ' יש להוסיף מנת לחם *',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 200,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: true,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n];\r\nexport default meats;  ","// import react state\r\nimport { useState, useEffect } from 'react';\r\n// import from react-select\r\nimport Select from 'react-select';\r\n// import service \r\nimport meats from '../../services/Meat&Substitutes/meats';\r\n// import variables \r\nimport { variables, getMaxHeight } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\n\r\nconst Meat = () => {\r\n        //  array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(meats);\r\n        const [productName, setProductName] = useState(meats[4]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n        const [flag, setFlag] = useState(false);\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n\r\n        useEffect(() => {\r\n                // Add event listener on mount\r\n                window.addEventListener('resize', handleResize);\r\n\r\n                // Clean up the event listener on unmount\r\n                return () => {\r\n                        window.removeEventListener('resize', handleResize);\r\n                };\r\n        }, []);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate countPortionFat \r\n                const countPortionFat = (amount / product?.breadFat?.portionFatCalculationCount).toLocaleString(variables?.numberFormat);\r\n                // Calculate countFat \r\n                const countFat = (amount / product?.breadFat?.fatCalculationCount).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramPortionFat \r\n                const gramPortionFat = (amount / product?.breadFat?.portionFatCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramFat \r\n                const gramFat = (amount / product?.details?.fat).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramBread \r\n                const gramBread = (amount / product?.breadFat?.breadCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate message \r\n                const message = product?.details?.message;\r\n                // Calculate fatString0 \r\n                const fatString0 = `${product?.breadFat?.fatString.split(\" יש להוריד \")[0]} יש להוריד`;\r\n                // Calculate fatString1 \r\n                const fatString1 = product?.breadFat?.fatString.split(\" יש להוריד \")[1];\r\n                // Calculate portionFatString0 \r\n                const portionFatString0 = `${product?.breadFat?.portionFatString.split(\" יש להוריד \")[0]} יש להוריד`;\r\n                // Calculate portionFatString1 \r\n                const portionFatString1 = product?.breadFat?.portionFatString.split(\" יש להוריד \")[1];\r\n                // Calculate breadString0 \r\n                const breadString0 = `${product?.breadFat?.breadString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate breadString1 \r\n                const breadString1 = product?.breadFat?.breadString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count portionFat reasult using toFraction   \r\n                const calculationCountPortionFat = ` ${variables?.fractionCalculation(count)}\\n ${portionFatString0} ${variables?.fractionCalculation(countPortionFat)} ${portionFatString1}`;\r\n                // Calculate count fat reasult using toFraction  \r\n                const calculationCountFat = ` ${variables?.fractionCalculation(count)}\\n ${fatString0} ${variables?.fractionCalculation(countFat)} ${fatString1}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction\r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram portionFat reasult using toFraction  \r\n                const calculationGramPortionFat = ` ${variables?.fractionCalculation(gram)}\\n ${portionFatString0} ${variables?.fractionCalculation(gramPortionFat)} ${portionFatString1}`;\r\n                // Calculate gram fat reasult using toFraction \r\n                const calculationGramFat = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gramFat)} ${fatString1}`;\r\n                // Calculate gram bread reasult using toFraction\r\n                const calculationGramBread = ` ${variables?.fractionCalculation(gram)}\\n ${breadString0} ${variables?.fractionCalculation(gramBread)} ${breadString1}`;\r\n                // Calculate gram fat message reasult using toFraction \r\n                const calculationGramFatMessage = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gramFat)} ${fatString1}\\n ${message}`;\r\n\r\n                if (isNaN(productAmount)) {\r\n                        return alert(variables.stringProductAmount);\r\n                }\r\n                if (product && type) {\r\n                        if (product?.check?.count && product?.check?.gram && product?.check?.portionFat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountPortionFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramPortionFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.portionFat) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramPortionFat\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat && product?.check?.message) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFatMessage\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.bread) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramBread\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert(variables.stringAlert);\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleProductPC = (selectedOption) => {\r\n                setProductName(selectedOption ? selectedOption.value : null);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        const handleProductTypePC = (selectedOption) => {\r\n                setProductType(selectedOption ? selectedOption.value : null);\r\n        };\r\n\r\n        const handleResize = () => {\r\n                setViewportWidth(window.innerWidth);\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType));\r\n                        setFlag(true);\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult(variables.stringResult);\r\n                }\r\n        };\r\n\r\n        const productsOptions = products.map((product) => {\r\n                const shouldShowOption = (product?.check?.count && productType === types[0])\r\n                        || productType === types[1];\r\n\r\n                return shouldShowOption ? (\r\n                        {\r\n                                value: product?.details?.productName,\r\n                                label: productType === types[0]\r\n                                        ? `${product?.details?.productName} ${product?.unit?.measureString}`\r\n                                        : `${product?.details?.productName} ${product?.unit?.gramString}`\r\n                        }\r\n                ) : null;\r\n        });\r\n\r\n        const filteredProductsOptions = productsOptions.filter(option => option !== null);\r\n\r\n        const typesOptions = types.map((type) => ({\r\n                value: type,\r\n                label: type\r\n        }));\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <div>\r\n                                                <h1>בשרים</h1>\r\n                                                <h3>*כ-100 גרם בשר מבושל הם שווה ערך ל-130 גרם בשר טרי. הערכים הינם לאחר בישול.</h3>\r\n                                        </div>\r\n                                        <label id='productType'>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                {viewportWidth <= 600 ? (\r\n                                                        <select\r\n                                                                id='productType'\r\n                                                                name='productType'\r\n                                                                value={productType}\r\n                                                                onChange={handleProductType}\r\n                                                        >\r\n                                                                {\r\n                                                                        types.map((type) => (\r\n                                                                                <option key={type} name=\"productType\" value={type}>\r\n                                                                                        {type}\r\n                                                                                </option>\r\n                                                                        ))\r\n                                                                }\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <Select\r\n                                                                id='productType'\r\n                                                                name='productType'\r\n                                                                options={typesOptions}\r\n                                                                isSearchable\r\n                                                                isClearable\r\n                                                                noOptionsMessage={() => variables.stringSelectProductTypeNoOptionsMessage}\r\n                                                                placeholder={variables.stringSelect}\r\n                                                                value={typesOptions.find((option) => option.value === productType)}\r\n                                                                onChange={handleProductTypePC}\r\n                                                        />\r\n                                                )}\r\n                                        </label>\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <label>\r\n                                                סוג הבשר:\r\n                                                {viewportWidth <= 600 ? (\r\n                                                        <select\r\n                                                                value={productName}\r\n                                                                onChange={handleProduct}\r\n                                                        >\r\n                                                                {products.map((product) => {\r\n                                                                        const shouldShowOption = (product?.check?.count && productType === types[0])\r\n                                                                                || productType === types[1];\r\n                                                                        return shouldShowOption ? (\r\n                                                                                <option\r\n                                                                                        key={product?.details?.productName}\r\n                                                                                        value={product?.details?.productName}\r\n                                                                                >\r\n                                                                                        {\r\n                                                                                                productType === types[0]\r\n                                                                                                        ? `${product?.details?.productName} ${product?.unit?.measureString}`\r\n                                                                                                        : `${product?.details?.productName} ${product?.unit?.gramString}`\r\n                                                                                        }\r\n                                                                                </option>\r\n                                                                        ) : null;\r\n                                                                })}\r\n                                                        </select>\r\n                                                ) : (\r\n                                                        <Select\r\n                                                                styles={{\r\n                                                                        menu: (provided) => ({\r\n                                                                                ...provided,\r\n                                                                                maxHeight: getMaxHeight(viewportWidth),\r\n                                                                                overflowY: 'auto',\r\n                                                                        }),\r\n                                                                }}\r\n                                                                options={filteredProductsOptions}\r\n                                                                isSearchable\r\n                                                                isClearable\r\n                                                                noOptionsMessage={() => variables.stringSelectProductNameNoOptionsMessage}\r\n                                                                placeholder={variables.stringSelect}\r\n                                                                value={filteredProductsOptions.find((option) => option.value === productName)}\r\n                                                                onChange={handleProductPC}\r\n                                                        />\r\n                                                )}\r\n                                        </label>\r\n                                        <div className='div-result div-result-pc'>\r\n                                                {flag === true && 'מספר מנות:'}\r\n                                                <div className='result'>{result}</div>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default Meat;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // Use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // Use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25, // זניח\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'נא לבחור פריט מן הרשימה',\r\n  stringProductAmount: 'יש להזין מספר',\r\n  stringSelect: 'יש ללחוץ על מנת לבחור...',\r\n  stringSelectProductTypeNoOptionsMessage: 'ניתן לחשב רק באמצעות כמות או גרם',\r\n  stringSelectProductNameNoOptionsMessage: 'הפריט לא נמצא ברשימה',\r\n};\r\n\r\n// Use for select-react dropdown list\r\nexport const getMaxHeight = (viewportWidth) => {\r\n  const maxHeightOptions = {\r\n    2560: 'none',\r\n    2400: '295px',\r\n    1745.45: '180px',\r\n    1536: '150px',\r\n  };\r\n\r\n  const viewportKeys = Object.keys(maxHeightOptions)\r\n    .map(parseFloat)\r\n    .sort((a, b) => b - a);\r\n\r\n  const selectedMaxHeight = viewportKeys.find(\r\n    (width) => viewportWidth >= width\r\n  );\r\n\r\n  return selectedMaxHeight ? maxHeightOptions[selectedMaxHeight] : 'none';\r\n};\r\n"],"names":["props","className","children","details","productName","value","gram","bread","fat","portionFat","message","breadFat","breadString","fatString","portionFatString","fatCalculationCount","portionFatCalculationGram","portionFatCalculationCount","breadCalculationGram","unit","gramString","measureString","check","count","types","useState","meats","products","setProductName","productType","setProductType","window","innerWidth","viewportWidth","setViewportWidth","productAmount","setProductAmount","result","setResult","flag","setFlag","product","find","type","useEffect","addEventListener","handleResize","removeEventListener","productsOptions","map","label","filteredProductsOptions","filter","option","typesOptions","FormFrame","onSubmit","e","preventDefault","amount","toLocaleString","variables","numberFormat","countPortionFat","countFat","gramPortionFat","gramFat","gramBread","fatString0","split","fatString1","portionFatString0","portionFatString1","breadString0","breadString1","calculationCountFraction","calculationCount","fractionCalculation","calculationCountPortionFat","calculationCountFat","calculationGramFraction","calculationGram","calculationGramPortionFat","calculationGramFat","calculationGramBread","calculationGramFatMessage","isNaN","alert","stringProductAmount","NEGLIGIBLE_NUMBER","stringAlert","calculateValue","err","console","log","stringResult","id","name","onChange","event","target","options","isSearchable","isClearable","noOptionsMessage","stringSelectProductTypeNoOptionsMessage","placeholder","stringSelect","selectedOption","htmlFor","min","max","step","styles","menu","provided","maxHeight","getMaxHeight","overflowY","stringSelectProductNameNoOptionsMessage","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number","maxHeightOptions","selectedMaxHeight","Object","keys","parseFloat","sort","a","b","width"],"sourceRoot":""}