{"version":3,"file":"static/js/16.eae0d71c.chunk.js","mappings":"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","sources":["components/FormFrame.jsx","services/Meat&Substitutes/meats.js","components/Meat&Substitutes/Meat.jsx","components/variables.js","../node_modules/fraction-parser/lib/helpers/getClosestLookupNumber.js","../node_modules/fraction-parser/lib/helpers/numberLookupMap.js","../node_modules/fraction-parser/lib/index.js","../node_modules/fraction-parser/lib/toDecimal.js","../node_modules/fraction-parser/lib/toFraction.js"],"sourcesContent":["import '../assets/css/FormFrame.css'; // import the CSS file\r\n\r\nconst FormFrame = (props) => {\r\n        return (\r\n                <>\r\n                        <div className=\"form-frame-container\">\r\n                                <div className=\"form-frame\">\r\n                                        {props.children}\r\n                                </div>\r\n                        </div>\r\n                </>\r\n        );\r\n}\r\n\r\nexport default FormFrame;\r\n","const meats = [\r\n        {\r\n                details: {\r\n                        productName: 'איברים פנימיים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(טחול, כבד, לבבות, קורקבנים)',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר בקר',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר הודו ללא עור',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 1,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: ' יש להוריד מנת שומן *',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 90,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: true,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר הודו עם עור',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף ללא עור (עם עצם)',\r\n                        value: 0.25,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 1,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: ' יש להוריד מנת שומן *',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 150,\r\n                        portionFatCalculationCount: 0.25,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם, שקול עם עצם)',\r\n                        measureString: '(עוף קטן מספר 1)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: true,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף עם עור (עם עצם)',\r\n                        value: 0.25,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם, שקול עם עצם)',\r\n                        measureString: '(עוף קטן מספר 1)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'בשר עוף',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דג מעושן/משומר בשמן/מלוח',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים משומרים במים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים רזים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: `.(מכיל עד 5 גר' שומן ב-100 גרם (מבושל *`,\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים רזים (עם עצמות)',\r\n                        value: 0,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: `.(מכיל עד 5 גר' שומן ב-100 גרם (מבושל *`,\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: true,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים שמנים',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'דגים שמנים (עם עצמות)',\r\n                        value: 0,\r\n                        gram: 150,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'כבש',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקניק',\r\n                        value: 0,\r\n                        gram: 90,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'נקנקיות',\r\n                        value: 3,\r\n                        gram: 120,\r\n                        bread: 0,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(יחידה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'פסטרמה',\r\n                        value: 6,\r\n                        gram: 100,\r\n                        bread: 0,\r\n                        fat: 10,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: '',\r\n                        fatString: ' יש להוריד גרם שומן *',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0.6,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 0,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '(פרוסה)',\r\n                },\r\n                check: {\r\n                        count: true,\r\n                        gram: true,\r\n                        bread: false,\r\n                        fat: true,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n        {\r\n                details: {\r\n                        productName: 'שניצל (עוף/הודו)',\r\n                        value: 0,\r\n                        gram: 100,\r\n                        bread: 0.5,\r\n                        fat: 0,\r\n                        portionFat: 0,\r\n                        message: '',\r\n                },\r\n                breadFat: {\r\n                        breadString: ' יש להוסיף מנת לחם *',\r\n                        fatString: '',\r\n                        portionFatString: '',\r\n                        fatCalculationCount: 0,\r\n                        portionFatCalculationGram: 0,\r\n                        portionFatCalculationCount: 0,\r\n                        breadCalculationGram: 200,\r\n                },\r\n                unit: {\r\n                        gramString: '(גרם)',\r\n                        measureString: '',\r\n                },\r\n                check: {\r\n                        count: false,\r\n                        gram: true,\r\n                        bread: true,\r\n                        fat: false,\r\n                        portionFat: false,\r\n                        message: false,\r\n                },\r\n        },\r\n];\r\nexport default meats;  ","// import react state\r\nimport { useState } from 'react';\r\n// import service \r\nimport meats from '../../services/Meat&Substitutes/meats';\r\n// import variables \r\nimport { variables } from '../variables';\r\n// import container \r\nimport FormFrame from '../FormFrame';\r\n// import css\r\nimport '../../assets/css/basic.css';\r\nconst Meat = () => {\r\n        //  array of type calculation\r\n        const types = ['כמות', 'גרם'];\r\n\r\n        // My states \r\n        const [products] = useState(meats);\r\n        const [productName, setProductName] = useState(meats[4]['details']['productName']);\r\n        const [productType, setProductType] = useState(types[0]);\r\n        const [productAmount, setProductAmount] = useState(1);\r\n        const [result, setResult] = useState('');\r\n\r\n        // Get the product object \r\n        const product = products.find(product => product?.details?.productName === productName);\r\n        // Get array of type\r\n        const type = types.find(type => type === productType);\r\n\r\n        // My handlers\r\n        const calculateValue = (productName, amount, productType) => {\r\n                // Calculate count \r\n                const count = (amount / product?.details?.value).toLocaleString(variables?.numberFormat);\r\n                // Calculate countPortionFat \r\n                const countPortionFat = (amount / product?.breadFat?.portionFatCalculationCount).toLocaleString(variables?.numberFormat);\r\n                // Calculate countFat \r\n                const countFat = (amount / product?.breadFat?.fatCalculationCount).toLocaleString(variables?.numberFormat);\r\n                // Calculate gram \r\n                const gram = (amount / product?.details?.gram).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramPortionFat \r\n                const gramPortionFat = (amount / product?.breadFat?.portionFatCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramFat \r\n                const gramFat = (amount / product?.details?.fat).toLocaleString(variables?.numberFormat);\r\n                // Calculate gramBread \r\n                const gramBread = (amount / product?.breadFat?.breadCalculationGram).toLocaleString(variables?.numberFormat);\r\n                // Calculate message \r\n                const message = product?.details?.message;\r\n                // Calculate fatString0 \r\n                const fatString0 = `${product?.breadFat?.fatString.split(\" יש להוריד \")[0]} יש להוריד`;\r\n                // Calculate fatString1 \r\n                const fatString1 = product?.breadFat?.fatString.split(\" יש להוריד \")[1];\r\n                // Calculate portionFatString0 \r\n                const portionFatString0 = `${product?.breadFat?.portionFatString.split(\" יש להוריד \")[0]} יש להוריד`;\r\n                // Calculate portionFatString1 \r\n                const portionFatString1 = product?.breadFat?.portionFatString.split(\" יש להוריד \")[1];\r\n                // Calculate breadString0 \r\n                const breadString0 = `${product?.breadFat?.breadString.split(\" יש להוסיף \")[0]} יש להוסיף`;\r\n                // Calculate breadString1 \r\n                const breadString1 = product?.breadFat?.breadString.split(\" יש להוסיף \")[1];\r\n\r\n                // Match count with NEGLIGIBLE_NUMBER\r\n                const calculationCountFraction = ` ${count}`;\r\n                // Calculate count reasult using toFraction \r\n                const calculationCount = ` ${variables?.fractionCalculation(count)}`;\r\n                // Calculate count portionFat reasult using toFraction   \r\n                const calculationCountPortionFat = ` ${variables?.fractionCalculation(count)}\\n ${portionFatString0} ${variables?.fractionCalculation(countPortionFat)} ${portionFatString1}`;\r\n                // Calculate count fat reasult using toFraction  \r\n                const calculationCountFat = ` ${variables?.fractionCalculation(count)}\\n ${fatString0} ${variables?.fractionCalculation(countFat)} ${fatString1}`;\r\n\r\n                // Match gram with NEGLIGIBLE_NUMBER\r\n                const calculationGramFraction = ` ${gram}`;\r\n                // Calculate gram reasult using toFraction\r\n                const calculationGram = ` ${variables?.fractionCalculation(gram)}`;\r\n                // Calculate gram portionFat reasult using toFraction  \r\n                const calculationGramPortionFat = ` ${variables?.fractionCalculation(gram)}\\n ${portionFatString0} ${variables?.fractionCalculation(gramPortionFat)} ${portionFatString1}`;\r\n                // Calculate gram fat reasult using toFraction \r\n                const calculationGramFat = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gramFat)} ${fatString1}`;\r\n                // Calculate gram bread reasult using toFraction\r\n                const calculationGramBread = ` ${variables?.fractionCalculation(gram)}\\n ${breadString0} ${variables?.fractionCalculation(gramBread)} ${breadString1}`;\r\n                // Calculate gram fat message reasult using toFraction \r\n                const calculationGramFatMessage = ` ${variables?.fractionCalculation(gram)}\\n ${fatString0} ${variables?.fractionCalculation(gramFat)} ${fatString1}\\n ${message}`;\r\n\r\n                if (product && type) {\r\n                        if (product?.check?.count && product?.check?.gram && product?.check?.portionFat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountPortionFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramPortionFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCountFat\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : ' זניח';\r\n                        }\r\n                        else if (product?.check?.count && product?.check?.gram) {\r\n                                return productType === types[0] && calculationCountFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationCount\r\n                                        : productType === types[1] && calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.portionFat) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramPortionFat\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat && product?.check?.message) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFatMessage\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.fat) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramFat\r\n                                                : 'זניח';\r\n                        }\r\n                        else if (product?.check?.gram && product?.check?.bread) {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGramBread\r\n                                                : 'זניח';\r\n                        }\r\n                        else {\r\n                                return productType === types[0] ? ` לא ניתן לבצע חישוב לפי כמות לערך ${productName} `\r\n                                        : calculationGramFraction >= variables?.NEGLIGIBLE_NUMBER ? calculationGram\r\n                                                : 'זניח';\r\n                        }\r\n                }\r\n                else {\r\n                        return alert('הערך שהוזן אינו קיים');\r\n                }\r\n        };\r\n\r\n        const handleProduct = (event) => {\r\n                setProductName(event.target.value);\r\n        };\r\n\r\n        const handleAmount = (event) => {\r\n                setProductAmount(event.target.value);\r\n        };\r\n\r\n        const handleProductType = (event) => {\r\n                setProductType(event.target.value);\r\n        };\r\n\r\n        // Clean input field when click it \r\n        const handleClear = (event) => {\r\n                event.target.value = \"\";\r\n        };\r\n\r\n        const handleSubmit = (e) => {\r\n                // Prevent reload the page\r\n                e.preventDefault();\r\n                try {\r\n                        setResult(calculateValue(productName, productAmount, productType));\r\n                }\r\n                catch (err) {\r\n                        console.log(err.message);\r\n                        setResult('קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר');\r\n                }\r\n        };\r\n\r\n        return (\r\n                <>\r\n                        <FormFrame>\r\n                                <form onSubmit={handleSubmit}>\r\n                                        <div>\r\n                                                <h1>בשר</h1>\r\n                                                <h3>*כ-100 גרם בשר מבושל הם שווה ערך ל-130 גרם בשר טרי. הערכים הינם לאחר בישול.</h3>\r\n                                        </div>\r\n                                        <br />\r\n                                        <label>\r\n                                                חישוב לפי כמות או גרמים:\r\n                                                <input list=\"productType\"\r\n                                                        defaultValue={productType}\r\n                                                        onChange={handleProductType}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productType\">\r\n                                                        {\r\n                                                                types.map((type) => (\r\n                                                                        <option key={type} name=\"productType\" value={type}>\r\n                                                                                {type}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <label htmlFor=\"productAmount\">\r\n                                                כמות נאכלת:\r\n                                                <input\r\n                                                        name='productAmount'\r\n                                                        type=\"number\"\r\n                                                        id=\"productAmount\"\r\n                                                        min=\"0\"\r\n                                                        max=\"1000\"\r\n                                                        step=\"any\"\r\n                                                        value={productAmount}\r\n                                                        onChange={handleAmount}\r\n                                                />\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <label>\r\n                                                סוג הבשר:\r\n                                                <input list=\"productName\"\r\n                                                        defaultValue={productName}\r\n                                                        onChange={handleProduct}\r\n                                                        onClick={handleClear}\r\n                                                        onFocus={handleClear}\r\n                                                />\r\n                                                <datalist id=\"productName\">\r\n                                                        {\r\n                                                                products.map((product) => (\r\n                                                                        <option\r\n                                                                                key={product?.details?.productName}\r\n                                                                                name=\"productName\"\r\n                                                                                value={product?.check?.count && productType === types[0] ? product?.details?.productName\r\n                                                                                        : productType === types[1] ? product?.details?.productName\r\n                                                                                                : ''}>\r\n                                                                                {productType === types[0] ? product?.unit?.measureString : product?.unit?.gramString}\r\n                                                                        </option>\r\n                                                                ))\r\n                                                        }\r\n                                                </datalist>\r\n                                        </label>\r\n                                        <br /><br />\r\n                                        <div className='div1'>\r\n                                                מספר מנות:\r\n                                                <p className='result'>{result}</p>\r\n                                        </div>\r\n                                        <button type=\"submit\">חשב</button>\r\n                                </form >\r\n                        </FormFrame >\r\n                </>\r\n        );\r\n};\r\n\r\nexport default Meat;","// Library that parse decimals into fractions\r\nimport { toFraction } from 'fraction-parser';\r\n\r\nexport const variables = {\r\n  // use for toLocaleString\r\n  numberFormat: { minimumFractionDigits: 2, maximumFractionDigits: 2 },\r\n  // use for toFraction\r\n  fractionFormat: { useUnicodeVulgar: true },\r\n  fractionCalculation: (variable) =>\r\n    toFraction(Number(variable) || 0, variables.fractionFormat),\r\n  NEGLIGIBLE_NUMBER: 0.25,\r\n  stringResult: 'קיימת בעיה, במקרה והיא חוזרת אנא פנה לבונה האתר',\r\n  stringAlert: 'הערך שהוזן אינו קיים',\r\n};\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./numberLookupMap\"));\n// get the closest vulgar fraction from a decimal\nvar getClosestLookupNumber = function (value) {\n    var closest = 0;\n    var difference = 1;\n    Object.keys(numberLookupMap_1.default).forEach(function (key) {\n        var decimal = parseFloat(key);\n        var newDifference = Math.abs(value - decimal);\n        if (newDifference < difference) {\n            difference = newDifference;\n            closest = decimal;\n        }\n    });\n    return closest;\n};\nexports.default = getClosestLookupNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap = {\n    0.1: {\n        vulgar: '⅒',\n        fraction: '1/10',\n    },\n    0.11: {\n        vulgar: '⅑',\n        fraction: '1/9',\n    },\n    0.12: {\n        vulgar: '⅛',\n        fraction: '1/8',\n    },\n    0.14: {\n        vulgar: '⅐',\n        fraction: '1/7',\n    },\n    0.16: {\n        vulgar: '⅙',\n        fraction: '1/6',\n    },\n    0.2: {\n        vulgar: '⅕',\n        fraction: '1/5',\n    },\n    0.25: {\n        vulgar: '¼',\n        fraction: '1/4',\n    },\n    0.33: {\n        vulgar: '⅓',\n        fraction: '1/3',\n    },\n    0.37: {\n        vulgar: '⅜',\n        fraction: '3/8',\n    },\n    0.4: {\n        vulgar: '⅖',\n        fraction: '2/5',\n    },\n    0.5: {\n        vulgar: '½',\n        fraction: '1/2',\n    },\n    0.6: {\n        vulgar: '⅗',\n        fraction: '3/5',\n    },\n    0.62: {\n        vulgar: '⅝',\n        fraction: '5/8',\n    },\n    0.66: {\n        vulgar: '⅔',\n        fraction: '2/3',\n    },\n    0.75: {\n        vulgar: '¾',\n        fraction: '3/4',\n    },\n    0.8: {\n        vulgar: '⅘',\n        fraction: '4/5',\n    },\n    0.83: {\n        vulgar: '⅚',\n        fraction: '5/6',\n    },\n    0.87: {\n        vulgar: '⅞',\n        fraction: '7/8',\n    },\n};\nexports.default = numberLookupMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDecimal = exports.toFraction = void 0;\nvar toFraction_1 = require(\"./toFraction\");\nObject.defineProperty(exports, \"toFraction\", { enumerable: true, get: function () { return __importDefault(toFraction_1).default; } });\nvar toDecimal_1 = require(\"./toDecimal\");\nObject.defineProperty(exports, \"toDecimal\", { enumerable: true, get: function () { return __importDefault(toDecimal_1).default; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\n// function that takes a unicode vulgar or a fraction and returns a decimal\nvar toDecimal = function (value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (value === '' || value === undefined || value === null) {\n        return 0;\n    }\n    var _a = value.split(' '), int = _a[0], fraction = _a[1];\n    if (fraction === undefined || fraction === '') {\n        return parseFloat(int);\n    }\n    var decimal = Object.keys(numberLookupMap_1.default).find(function (key) { return numberLookupMap_1.default[key].vulgar === fraction || numberLookupMap_1.default[key].fraction === fraction; }) || fraction;\n    return parseFloat(int) + parseFloat(decimal);\n};\nexports.default = toDecimal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberLookupMap_1 = __importDefault(require(\"./helpers/numberLookupMap\"));\nvar getClosestLookupNumber_1 = __importDefault(require(\"./helpers/getClosestLookupNumber\"));\n// functions that returns a string representation of a fraction from a number\nvar toFraction = function (decimal, _a) {\n    var _b = _a.useUnicodeVulgar, useUnicodeVulgar = _b === void 0 ? true : _b;\n    // if the number is a whole number, return it as a string\n    if (decimal % 1 === 0) {\n        return decimal.toString();\n    }\n    var decimalPortion = (decimal - Math.floor(decimal)).toFixed(2);\n    var numberPortion = Math.trunc(decimal);\n    numberPortion = numberPortion === 0 ? '' : \"\".concat(numberPortion, \" \");\n    // if the number is a decimal, return it as a fraction\n    if (useUnicodeVulgar) {\n        return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].vulgar);\n    }\n    return \"\".concat(numberPortion).concat(numberLookupMap_1.default[(0, getClosestLookupNumber_1.default)(decimalPortion)].fraction);\n};\nexports.default = toFraction;\n"],"names":["props","_jsx","_Fragment","children","className","details","productName","value","gram","bread","fat","portionFat","message","breadFat","breadString","fatString","portionFatString","fatCalculationCount","portionFatCalculationGram","portionFatCalculationCount","breadCalculationGram","unit","gramString","measureString","check","count","Meat","types","products","useState","meats","setProductName","productType","setProductType","productAmount","setProductAmount","result","setResult","product","find","_product$details","type","handleClear","event","target","FormFrame","_jsxs","onSubmit","e","preventDefault","calculateValue","amount","_product$details2","_product$breadFat","_product$breadFat2","_product$details3","_product$breadFat3","_product$details4","_product$breadFat4","_product$details5","_product$breadFat5","_product$breadFat6","_product$breadFat7","_product$breadFat8","_product$breadFat9","_product$breadFat10","toLocaleString","variables","numberFormat","countPortionFat","countFat","gramPortionFat","gramFat","gramBread","fatString0","concat","split","fatString1","portionFatString0","portionFatString1","breadString0","breadString1","calculationCountFraction","calculationCount","fractionCalculation","calculationCountPortionFat","calculationCountFat","calculationGramFraction","calculationGram","calculationGramPortionFat","calculationGramFat","calculationGramBread","calculationGramFatMessage","_product$check","_product$check2","_product$check3","_product$check4","_product$check5","_product$check6","_product$check7","_product$check8","_product$check9","_product$check10","_product$check11","_product$check12","_product$check13","_product$check14","_product$check15","_product$check16","_product$check17","NEGLIGIBLE_NUMBER","alert","err","console","log","list","defaultValue","onChange","onClick","onFocus","id","map","name","htmlFor","min","max","step","_product$details6","_product$check18","_product$details7","_product$details8","_product$unit","_product$unit2","minimumFractionDigits","maximumFractionDigits","fractionFormat","useUnicodeVulgar","variable","toFraction","Number","stringResult","stringAlert","__importDefault","this","mod","__esModule","Object","defineProperty","exports","numberLookupMap_1","require","closest","difference","keys","default","forEach","key","decimal","parseFloat","newDifference","Math","abs","vulgar","fraction","toDecimal","toFraction_1","enumerable","get","toDecimal_1","undefined","_a","int","getClosestLookupNumber_1","_b","toString","decimalPortion","floor","toFixed","numberPortion","trunc"],"sourceRoot":""}